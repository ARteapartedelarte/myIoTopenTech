{
  "ruleChain": {
    "additionalInfo": null,
    "name": "RAK7204",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 62,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 624,
          "layoutY": 363
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Nivel bajo de batería\";\nmetadata.umbralBateria=msg.alarma.umbralBateria;\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1174,
          "layoutY": 280
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 336,
          "layoutY": 362
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7204);\n\nif (obj.nivelDeBateria.enable===true){\n    msg.alarma=obj.nivelDeBateria;\n    //Cargo los datos de interés en los metadatos para construir los mensaje de alarma\n    metadata.analog_in_8=msg.analog_in_8;\n    metadata.alarmaActual=JSON.stringify(obj.nivelDeBateria);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1169,
          "layoutY": 777
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1169,
          "layoutY": 838
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 879,
          "layoutY": 787
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if ( msg.temperature_2< msg.alarma.umbralMinima) {\n    return ['crear'];\n} else if(msg.temperature_2 > msg.alarma.umbralMinima+msg.alarma.histeresisMinima){\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1436,
          "layoutY": 725
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo temperatura muy alta. La temperatura actual es \"+metadata.temperatura+\" ºC, y el umbral está fijado en \"+metadata.umbralMaxima+\" ºC.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.temperatura+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1436,
          "layoutY": 673
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo temperatura muy alta. La temperatura actual es \"+metadata.temperatura+\" ºC, y el umbral está fijado en \"+metadata.umbralMaxima+\" ºC.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.temperatura+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1172,
          "layoutY": 657
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1172,
          "layoutY": 718
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 614,
          "layoutY": 762
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma muyBaja",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Temperatura muy baja\";\nmetadata.umbralMinima=msg.alarma.umbralMinima;\nmetadata.histeresisMinima=msg.alarma.histeresisMinima;\nmetadata.umbralMaxima=msg.alarma.umbralMaxima;\nmetadata.histeresisMaxima=msg.alarma.histeresisMaxima;\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 886,
          "layoutY": 917
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if ( msg.barometric_pressure_6> msg.alarma.umbralMaxima) {\n    return ['crear'];\n} else if(msg.barometric_pressure_6 < msg.alarma.umbralMaxima-msg.alarma.histeresisMaxima){\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 618,
          "layoutY": 919
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma muyAlta",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Presión muy alta\";\nmetadata.umbralMinima=msg.alarma.umbralMinima;\nmetadata.histeresisMinima=msg.alarma.histeresisMinima;\nmetadata.umbralMaxima=msg.alarma.umbralMaxima;\nmetadata.histeresisMaxima=msg.alarma.histeresisMaxima;\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 340,
          "layoutY": 911
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7204);\n\nif (obj.presion.enable===true){\n    msg.alarma=obj.presion;\n    //Cargo los datos de interés en los metadatos para construir los mensaje de alarma\n    metadata.presion=msg.barometric_pressure_6;\n    //alarmaActual se usa en la cadena de reglas de Notificaciones\n    //Para extraer información. No puede ir por msg porque se\n    //pierde en el nodo de generación de alarma\n    metadata.alarmaActual=JSON.stringify(obj.presion);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 1095
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo presión muy baja. La presion actual es \"+metadata.presion+\" hPa, y el umbral está fijado en \"+metadata.umbralMinima+\" hPa.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.presion+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 1043
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo presión muy baja. La presion actual es \"+metadata.presion+\" hPa, y el umbral está fijado en \"+metadata.umbralMinima+\" hPa.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.presion+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 1027
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 1088
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 883,
          "layoutY": 1037
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if ( msg.barometric_pressure_6< msg.alarma.umbralMinima) {\n    return ['crear'];\n} else if(msg.barometric_pressure_6 > msg.alarma.umbralMinima+msg.alarma.histeresisMinima){\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1440,
          "layoutY": 975
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo presión muy alta. La presión actual es \"+metadata.presion+\" hPa, y el umbral está fijado en \"+metadata.umbralMaxima+\" hPa.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.presion+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1440,
          "layoutY": 923
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo presión muy alta. La presión actual es \"+metadata.presion+\" hPa, y el umbral está fijado en \"+metadata.umbralMaxima+\" hPa.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.presion+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1176,
          "layoutY": 907
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1176,
          "layoutY": 968
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 618,
          "layoutY": 1012
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma muyBaja",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Presión muy baja\";\nmetadata.umbralMinima=msg.alarma.umbralMinima;\nmetadata.histeresisMinima=msg.alarma.histeresisMinima;\nmetadata.umbralMaxima=msg.alarma.umbralMaxima;\nmetadata.histeresisMaxima=msg.alarma.histeresisMaxima;\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 884,
          "layoutY": 1165
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if ( msg.relative_humidity_7> msg.alarma.umbralMaxima) {\n    return ['crear'];\n} else if(msg.relative_humidity_7 < msg.alarma.umbralMaxima-msg.alarma.histeresisMaxima){\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 616,
          "layoutY": 1167
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma muyAlta",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Humedad muy alta\";\nmetadata.umbralMinima=msg.alarma.umbralMinima;\nmetadata.histeresisMinima=msg.alarma.histeresisMinima;\nmetadata.umbralMaxima=msg.alarma.umbralMaxima;\nmetadata.histeresisMaxima=msg.alarma.histeresisMaxima;\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 338,
          "layoutY": 1159
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7204);\n\nif (obj.humedad.enable===true){\n    msg.alarma=obj.humedad;\n    //Cargo los datos de interés en los metadatos para construir los mensaje de alarma\n    metadata.humedad=msg.relative_humidity_7;\n    //alarmaActual se usa en la cadena de reglas de Notificaciones\n    //Para extraer información. No puede ir por msg porque se\n    //pierde en el nodo de generación de alarma\n    metadata.alarmaActual=JSON.stringify(obj.humedad);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1435,
          "layoutY": 1343
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo humedad muy baja. La humedad actual es \"+metadata.temperatura+\" %, y el umbral está fijado en \"+metadata.umbralMinima+\" %.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.humedad+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1435,
          "layoutY": 1291
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo humedad muy baja. La humedad actual es \"+metadata.humedad+\" %, y el umbral está fijado en \"+metadata.umbralMinima+\" %.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.humedad+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1171,
          "layoutY": 1275
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1171,
          "layoutY": 1336
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 881,
          "layoutY": 1285
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if ( msg.relative_humidity_7< msg.alarma.umbralMinima) {\n    return ['crear'];\n} else if(msg.relative_humidity_7 > msg.alarma.umbralMinima+msg.alarma.histeresisMinima){\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1438,
          "layoutY": 1223
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo humedad muy alta. La temperatura actual es \"+metadata.humedad+\" %, y el umbral está fijado en \"+metadata.umbralMaxima+\" %.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.humedad+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1438,
          "layoutY": 1171
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo humedad muy alta. La humedad actual es \"+metadata.humedad+\" %, y el umbral está fijado en \"+metadata.umbralMaxima+\" %.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.humedad+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1174,
          "layoutY": 1155
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1174,
          "layoutY": 1216
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 616,
          "layoutY": 1260
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma muyBaja",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Humedad muy baja\";\nmetadata.umbralMinima=msg.alarma.umbralMinima;\nmetadata.histeresisMinima=msg.alarma.histeresisMinima;\nmetadata.umbralMaxima=msg.alarma.umbralMaxima;\nmetadata.histeresisMaxima=msg.alarma.histeresisMaxima;\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 886,
          "layoutY": 515
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if ( msg.iaq> msg.alarma.umbral) {\n    return ['crear'];\n} else if(msg.iaq <= msg.alarma.umbral-msg.alarma.histeresis){\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 605
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de mala calidad del aire. El IAQ actual es \"+metadata.iaq+\", y el umbral está fijado en \"+metadata.umbral+\".\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.iaq+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 553
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de mala calidad del aire. El IAQ actual es \"+metadata.iaq+\", y el umbral está fijado en \"+metadata.umbral+\".\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.iaq+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 537
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 598
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 306,
          "layoutY": 197
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "datos para IAQ?",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msg.hasOwnProperty('relative_humidity_7') && msg\n    .hasOwnProperty('temperature_2')&& msg\n    .hasOwnProperty('analog_in_4')) {\n    if(msg.relative_humidity_7>=0 && msg.relative_humidity_7<=100 && msg.temperature_2>-21 && msg.temperature_2<100){\n        return ['si'];\n    }\n    return ['no'];\n}\nreturn ['no'];"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 584,
          "layoutY": 197
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "calcularIAQ",
        "debugMode": true,
        "configuration": {
          "jsScript": "//Uso esta referencia para calcular el IAQ\n//https://github.com/G6EJD/BME680-Example\n//David Bird 2018\n//Asumo rango de resistencia de 0 a 50000\n//Doy un peso del 10% a la humedad\n//y otro 10% a la temperatura\n\nif (msg.hasOwnProperty('relative_humidity_7') && msg\n    .hasOwnProperty('temperature_2') && msg\n    .hasOwnProperty('analog_in_4')) {\n    msg.latitude = msg.gps_1_latitude;\n    msg.longitude = msg.gps_1_longitude;\n}\n\n\nmsg.analog_in_4 = Math.min(50000, msg.analog_in_4*1000);\nvar resistencia=100.0-(msg.analog_in_4*100.0/50000.0);\nvar temperatura;\nif(msg.temperature_2<21){\n    temperatura=(msg.temperature_2-21.0)*100.0/(-41.0);\n}else{\n    temperatura=(msg.temperature_2-21.0)*100.0/79.0;\n}\nvar humedad;\nif(msg.relative_humidity_7<40){\n    humedad=(msg.relative_humidity_7-40.0)*100.0/(-40.0);\n}else{\n    humedad=(msg.relative_humidity_7-40.0)*100.0/60.0;\n}\nmsg.iaq=0.8*resistencia + 0.1 * temperatura + 0.1 * humedad; //en porcentaje\nmsg.iaq=5.0 * msg.iaq;\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: 'POST_TELEMETRY_REQUEST'\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 458,
          "layoutY": 269
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "guardar",
        "debugMode": true,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 474
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo inactividad.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 422
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de inactividad.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 406
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 467
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1438,
          "layoutY": 348
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo \"+metadata.tipoAlarma+\". La tensión actual de la batería es \"+metadata.analog_in_1+\" V, y el umbral de alarma es \"+metadata.umbralBateria+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1438,
          "layoutY": 296
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo \"+metadata.tipoAlarma+\". La tensión actual de la batería es \"+metadata.analog_in_1+\" V, y el umbral de alarma es \"+metadata.umbralBateria+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1174,
          "layoutY": 341
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 883,
          "layoutY": 362
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msg.analog_in_8 < parseFloat(msg.alarma.umbralBateria)) {\n    return ['crear'];\n} else if (msg.analog_in_8 > parseFloat(msg.alarma.umbralBateria) + parseFloat(msg\n    .alarma.histeresis)) {\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 625,
          "layoutY": 513
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Calidad del aire\";\nmetadata.umbral=msg.alarma.umbral;\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 340,
          "layoutY": 513
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7204);\n\nif (obj.iaq.enable===true){\n    msg.alarma=obj.iaq;\n    //Cargo los datos de interés en los metadatos para construir los mensaje de alarma\n    metadata.iaq=msg.iaq;\n    //alarmaActual se usa en la cadena de reglas de Notificaciones\n    metadata.alarmaActual=JSON.stringify(obj.iaq);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 47,
          "layoutY": 383
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Cargar alarmas",
        "debugMode": true,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "__alarma_RAK7204"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": true,
          "getLatestValueWithTs": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 47,
          "layoutY": 503
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Alarmas",
        "debugMode": true,
        "configuration": {
          "jsScript": "var respuesta = [];\nif (metadata.hasOwnProperty('ss___alarma_RAK7204')) {\n    var obj = JSON.parse(metadata.ss___alarma_RAK7204);\n    if (obj.hasOwnProperty('iaq')&&msg.hasOwnProperty('iaq')&&obj.iaq.hasOwnProperty('umbral')&&obj.iaq.hasOwnProperty('histeresis')) {\n        respuesta.push('iaq');\n    }\n    if (obj.hasOwnProperty('nivelDeBateria')&&msg.hasOwnProperty('analog_in_8')) {\n        respuesta.push('nivelDeBateria');\n    }\n    if (obj.hasOwnProperty('inactividad')&&(msgType=='INACTIVITY_EVENT'||msgType=='ACTIVITY_EVENT')) {\n        \n        respuesta.push('inactividad');\n    }\n    if (obj.hasOwnProperty('temperatura')&&msg.hasOwnProperty('temperature_2')&&obj.temperatura.hasOwnProperty('umbralMinima')&&obj.temperatura.hasOwnProperty('histeresisMinima')&&obj.temperatura.hasOwnProperty('umbralMaxima')&&obj.temperatura.hasOwnProperty('histeresisMaxima')) {\n        respuesta.push('temperatura');\n    }\n    if (obj.hasOwnProperty('presion')&&msg.hasOwnProperty('barometric_pressure_6')&&obj.temperatura.hasOwnProperty('umbralMinima')&&obj.temperatura.hasOwnProperty('histeresisMinima')&&obj.temperatura.hasOwnProperty('umbralMaxima')&&obj.temperatura.hasOwnProperty('histeresisMaxima')) {\n        respuesta.push('presion');\n    }\n    if (obj.hasOwnProperty('humedad')&&msg.hasOwnProperty('relative_humidity_7')&&obj.temperatura.hasOwnProperty('umbralMinima')&&obj.temperatura.hasOwnProperty('histeresisMinima')&&obj.temperatura.hasOwnProperty('umbralMaxima')&&obj.temperatura.hasOwnProperty('histeresisMaxima')) {\n        respuesta.push('humedad');\n    }\n}\n\nreturn respuesta;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 887,
          "layoutY": 441
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msgType=='INACTIVITY_EVENT') {\n    return ['crear'];\n} else{\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 620,
          "layoutY": 444
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Inactividad\";\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 340,
          "layoutY": 445
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7204);\n\nif (obj.inactividad.enable===true){\n    metadata.alarmaActual=JSON.stringify(obj.inactividad);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 580,
          "layoutY": 134
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardarTooltip",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 306,
          "layoutY": 135
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tooltip",
        "debugMode": true,
        "configuration": {
          "jsScript": "// unix timestamp\nvar ts = metadata.ts;\n\n// convert unix timestamp to milliseconds\nvar ts_ms = ts * 1;\n\n// initialize new Date object\nvar date_ob = new Date(ts_ms);\n\n// year as 4 digits (YYYY)\nvar year = date_ob.getFullYear();\n\n// month as 2 digits (MM)\nvar month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n\n// date as 2 digits (DD)\nvar date = (\"0\" + date_ob.getDate()).slice(-2);\n\n// hours as 2 digits (hh)\nvar hours = (\"0\" + date_ob.getHours()).slice(-2);\n\n// minutes as 2 digits (mm)\nvar minutes = (\"0\" + date_ob.getMinutes()).slice(-2);\n\n// seconds as 2 digits (ss)\nvar seconds = (\"0\" + date_ob.getSeconds()).slice(-2);\n\n\nmsg = {\n    'tooltip': \"<b>\" + year + \"-\" + month + \"-\" + date +\n        \" \" + hours + \":\" + minutes + \":\" + seconds +\n        \"</b><br/>\" + \"<b>Lat: </b>\" + (msg\n            .gps_1_latitude) +\n        \"<br/><b>Lon: </b>\" + (msg.gps_1_longitude) +\n        \"<br/><b>Batería: </b>\" + (msg.analog_in_8) +\n        \" V\"\n};\nmsgType = \"POST_ATTRIBUTES_REQUEST\";\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 46,
          "layoutY": 207
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "es telemetria?",
        "debugMode": true,
        "configuration": {
          "jsScript": "if(msgType=='POST_TELEMETRY_REQUEST') {\n    return ['telemetria'];\n}else if(msgType=='INACTIVITY_EVENT'||msgType=='ACTIVITY_EVENT'){\n    return['alarma'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 882,
          "layoutY": 667
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if ( msg.temperature_2> msg.alarma.umbralMaxima) {\n    return ['crear'];\n} else if(msg.temperature_2 < msg.alarma.umbralMaxima-msg.alarma.histeresisMaxima){\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 614,
          "layoutY": 669
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma muyAlta",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Temperatura muy alta\";\nmetadata.umbralMinima=msg.alarma.umbralMinima;\nmetadata.histeresisMinima=msg.alarma.histeresisMinima;\nmetadata.umbralMaxima=msg.alarma.umbralMaxima;\nmetadata.histeresisMaxima=msg.alarma.histeresisMaxima;\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 336,
          "layoutY": 661
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7204);\n\nif (obj.temperatura.enable===true){\n    msg.alarma=obj.temperatura;\n    //Cargo los datos de interés en los metadatos para construir los mensaje de alarma\n    metadata.temperatura=msg.temperature_2;\n    //alarmaActual se usa en la cadena de reglas de Notificaciones\n    //Para extraer información. No puede ir por msg porque se\n    //pierde en el nodo de generación de alarma\n    metadata.alarmaActual=JSON.stringify(obj.temperatura);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1433,
          "layoutY": 845
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo temperatura muy baja. La temperatura actual es \"+metadata.temperatura+\" ºC, y el umbral está fijado en \"+metadata.umbralMinima+\" ºC.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.temperatura+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1433,
          "layoutY": 793
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo temperatura muy baja. La temperatura actual es \"+metadata.temperatura+\" ºC, y el umbral está fijado en \"+metadata.umbralMinima+\" ºC.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.temperatura+'\",\"value3\":\"'+metadata.analog_in_8+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 52,
        "type": "Success"
      },
      {
        "fromIndex": 1,
        "toIndex": 50,
        "type": "Created"
      },
      {
        "fromIndex": 2,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 3,
        "toIndex": 67,
        "type": "Created"
      },
      {
        "fromIndex": 4,
        "toIndex": 66,
        "type": "Cleared"
      },
      {
        "fromIndex": 5,
        "toIndex": 4,
        "type": "clear"
      },
      {
        "fromIndex": 5,
        "toIndex": 3,
        "type": "crear"
      },
      {
        "fromIndex": 8,
        "toIndex": 7,
        "type": "Created"
      },
      {
        "fromIndex": 9,
        "toIndex": 6,
        "type": "Cleared"
      },
      {
        "fromIndex": 10,
        "toIndex": 5,
        "type": "Success"
      },
      {
        "fromIndex": 11,
        "toIndex": 22,
        "type": "clear"
      },
      {
        "fromIndex": 11,
        "toIndex": 21,
        "type": "crear"
      },
      {
        "fromIndex": 12,
        "toIndex": 11,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 23,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 12,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 15,
        "type": "Created"
      },
      {
        "fromIndex": 17,
        "toIndex": 14,
        "type": "Cleared"
      },
      {
        "fromIndex": 18,
        "toIndex": 17,
        "type": "clear"
      },
      {
        "fromIndex": 18,
        "toIndex": 16,
        "type": "crear"
      },
      {
        "fromIndex": 21,
        "toIndex": 20,
        "type": "Created"
      },
      {
        "fromIndex": 22,
        "toIndex": 19,
        "type": "Cleared"
      },
      {
        "fromIndex": 23,
        "toIndex": 18,
        "type": "Success"
      },
      {
        "fromIndex": 24,
        "toIndex": 35,
        "type": "clear"
      },
      {
        "fromIndex": 24,
        "toIndex": 34,
        "type": "crear"
      },
      {
        "fromIndex": 25,
        "toIndex": 24,
        "type": "Success"
      },
      {
        "fromIndex": 26,
        "toIndex": 36,
        "type": "Success"
      },
      {
        "fromIndex": 26,
        "toIndex": 25,
        "type": "Success"
      },
      {
        "fromIndex": 29,
        "toIndex": 28,
        "type": "Created"
      },
      {
        "fromIndex": 30,
        "toIndex": 27,
        "type": "Cleared"
      },
      {
        "fromIndex": 31,
        "toIndex": 30,
        "type": "clear"
      },
      {
        "fromIndex": 31,
        "toIndex": 29,
        "type": "crear"
      },
      {
        "fromIndex": 34,
        "toIndex": 33,
        "type": "Created"
      },
      {
        "fromIndex": 35,
        "toIndex": 32,
        "type": "Cleared"
      },
      {
        "fromIndex": 36,
        "toIndex": 31,
        "type": "Success"
      },
      {
        "fromIndex": 37,
        "toIndex": 40,
        "type": "crear"
      },
      {
        "fromIndex": 37,
        "toIndex": 41,
        "type": "clear"
      },
      {
        "fromIndex": 40,
        "toIndex": 39,
        "type": "Created"
      },
      {
        "fromIndex": 41,
        "toIndex": 38,
        "type": "Cleared"
      },
      {
        "fromIndex": 42,
        "toIndex": 43,
        "type": "si"
      },
      {
        "fromIndex": 42,
        "toIndex": 44,
        "type": "no"
      },
      {
        "fromIndex": 43,
        "toIndex": 44,
        "type": "Success"
      },
      {
        "fromIndex": 44,
        "toIndex": 55,
        "type": "Success"
      },
      {
        "fromIndex": 47,
        "toIndex": 46,
        "type": "Created"
      },
      {
        "fromIndex": 48,
        "toIndex": 45,
        "type": "Cleared"
      },
      {
        "fromIndex": 51,
        "toIndex": 49,
        "type": "Cleared"
      },
      {
        "fromIndex": 52,
        "toIndex": 1,
        "type": "crear"
      },
      {
        "fromIndex": 52,
        "toIndex": 51,
        "type": "clear"
      },
      {
        "fromIndex": 53,
        "toIndex": 37,
        "type": "Success"
      },
      {
        "fromIndex": 54,
        "toIndex": 53,
        "type": "Success"
      },
      {
        "fromIndex": 55,
        "toIndex": 56,
        "type": "Success"
      },
      {
        "fromIndex": 56,
        "toIndex": 65,
        "type": "temperatura"
      },
      {
        "fromIndex": 56,
        "toIndex": 2,
        "type": "nivelDeBateria"
      },
      {
        "fromIndex": 56,
        "toIndex": 54,
        "type": "iaq"
      },
      {
        "fromIndex": 56,
        "toIndex": 59,
        "type": "inactividad"
      },
      {
        "fromIndex": 56,
        "toIndex": 13,
        "type": "presion"
      },
      {
        "fromIndex": 56,
        "toIndex": 26,
        "type": "humedad"
      },
      {
        "fromIndex": 57,
        "toIndex": 47,
        "type": "crear"
      },
      {
        "fromIndex": 57,
        "toIndex": 48,
        "type": "clear"
      },
      {
        "fromIndex": 58,
        "toIndex": 57,
        "type": "Success"
      },
      {
        "fromIndex": 59,
        "toIndex": 58,
        "type": "Success"
      },
      {
        "fromIndex": 61,
        "toIndex": 60,
        "type": "Success"
      },
      {
        "fromIndex": 62,
        "toIndex": 55,
        "type": "alarma"
      },
      {
        "fromIndex": 62,
        "toIndex": 61,
        "type": "telemetria"
      },
      {
        "fromIndex": 62,
        "toIndex": 42,
        "type": "telemetria"
      },
      {
        "fromIndex": 63,
        "toIndex": 9,
        "type": "clear"
      },
      {
        "fromIndex": 63,
        "toIndex": 8,
        "type": "crear"
      },
      {
        "fromIndex": 64,
        "toIndex": 63,
        "type": "Success"
      },
      {
        "fromIndex": 65,
        "toIndex": 10,
        "type": "Success"
      },
      {
        "fromIndex": 65,
        "toIndex": 64,
        "type": "Success"
      }
    ],
    "ruleChainConnections": [
      {
        "fromIndex": 6,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1723,
          "layoutY": 694,
          "ruleChainNodeId": "rule-chain-node-77"
        },
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1723,
          "layoutY": 694,
          "ruleChainNodeId": "rule-chain-node-77"
        },
        "type": "Success"
      },
      {
        "fromIndex": 14,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 1064,
          "ruleChainNodeId": "rule-chain-node-76"
        },
        "type": "Success"
      },
      {
        "fromIndex": 15,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 1064,
          "ruleChainNodeId": "rule-chain-node-76"
        },
        "type": "Success"
      },
      {
        "fromIndex": 19,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1727,
          "layoutY": 944,
          "ruleChainNodeId": "rule-chain-node-75"
        },
        "type": "Success"
      },
      {
        "fromIndex": 20,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1727,
          "layoutY": 944,
          "ruleChainNodeId": "rule-chain-node-75"
        },
        "type": "Success"
      },
      {
        "fromIndex": 27,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1722,
          "layoutY": 1312,
          "ruleChainNodeId": "rule-chain-node-74"
        },
        "type": "Success"
      },
      {
        "fromIndex": 28,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1722,
          "layoutY": 1312,
          "ruleChainNodeId": "rule-chain-node-74"
        },
        "type": "Success"
      },
      {
        "fromIndex": 32,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1725,
          "layoutY": 1192,
          "ruleChainNodeId": "rule-chain-node-73"
        },
        "type": "Success"
      },
      {
        "fromIndex": 33,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1725,
          "layoutY": 1192,
          "ruleChainNodeId": "rule-chain-node-73"
        },
        "type": "Success"
      },
      {
        "fromIndex": 38,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 574,
          "ruleChainNodeId": "rule-chain-node-72"
        },
        "type": "Success"
      },
      {
        "fromIndex": 39,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 574,
          "ruleChainNodeId": "rule-chain-node-72"
        },
        "type": "Success"
      },
      {
        "fromIndex": 45,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 443,
          "ruleChainNodeId": "rule-chain-node-71"
        },
        "type": "Success"
      },
      {
        "fromIndex": 46,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 443,
          "ruleChainNodeId": "rule-chain-node-71"
        },
        "type": "Success"
      },
      {
        "fromIndex": 49,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1725,
          "layoutY": 317,
          "ruleChainNodeId": "rule-chain-node-70"
        },
        "type": "Success"
      },
      {
        "fromIndex": 50,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1725,
          "layoutY": 317,
          "ruleChainNodeId": "rule-chain-node-70"
        },
        "type": "Success"
      },
      {
        "fromIndex": 66,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1720,
          "layoutY": 814,
          "ruleChainNodeId": "rule-chain-node-78"
        },
        "type": "Success"
      },
      {
        "fromIndex": 67,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "1088f310-961d-11ea-a693-d543988542ac"
        },
        "additionalInfo": {
          "layoutX": 1720,
          "layoutY": 814,
          "ruleChainNodeId": "rule-chain-node-78"
        },
        "type": "Success"
      }
    ]
  }
}