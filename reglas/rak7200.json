{
  "ruleChain": {
    "additionalInfo": null,
    "name": "RAK7200",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 6,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 1115,
          "layoutY": 202
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if(msg.alarma.trigger=='entrar'){\n    \n    \n        return ['crear'];\n   \n}else if(msg.alarma.trigger=='salir'){\n    \n    \n        return ['clear'];\n    \n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1495,
          "layoutY": 236
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1495,
          "layoutY": 175
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1760,
          "layoutY": 175
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo \"+metadata.tipoAlarma+\". Sus coordenadas son [lat: \"+metadata.gps_1_latitude+\", lon: \"+metadata.gps_1_longitude+\"] .La tensión de la batería es \"+metadata.analog_in_8+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.gps_1_latitude+'\",\"value3\":\"'+metadata.gps_1_longitude+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1761,
          "layoutY": 238
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado la alarma de tipo \"+metadata.tipoAlarma+\". Sus coordenadas son [lat: \"+metadata.gps_1_latitude+\", lon: \"+metadata.gps_1_longitude+\"] .La tensión de la batería es \"+metadata.analog_in_8+\" V.\";\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.gps_1_latitude+'\",\"value3\":\"'+metadata.gps_1_longitude+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 878,
          "layoutY": 236
        },
        "type": "org.thingsboard.rule.engine.geo.TbGpsGeofencingActionNode",
        "name": "geofence",
        "debugMode": true,
        "configuration": {
          "latitudeKeyName": "gps_1_latitude",
          "longitudeKeyName": "gps_1_longitude",
          "fetchPerimeterInfoFromMessageMetadata": true,
          "perimeterType": null,
          "polygonsDefinition": null,
          "centerLatitude": null,
          "centerLongitude": null,
          "range": null,
          "rangeUnit": null,
          "minInsideDuration": 1,
          "minOutsideDuration": 1,
          "minInsideDurationTimeUnit": "MINUTES",
          "minOutsideDurationTimeUnit": "MINUTES"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 46,
          "layoutY": 207
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "es telemetria?",
        "debugMode": true,
        "configuration": {
          "jsScript": "if(msgType=='POST_TELEMETRY_REQUEST') {\n    return ['telemetria','alarma'];\n}else if(msgType=='INACTIVITY_EVENT'||msgType=='ACTIVITY_EVENT'){\n    return['alarma'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 337,
          "layoutY": 177
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tooltip",
        "debugMode": true,
        "configuration": {
          "jsScript": "// unix timestamp\nvar ts = metadata.ts;\n\n// convert unix timestamp to milliseconds\nvar ts_ms = ts * 1;\n\n// initialize new Date object\nvar date_ob = new Date(ts_ms);\n\n// year as 4 digits (YYYY)\nvar year = date_ob.getFullYear();\n\n// month as 2 digits (MM)\nvar month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n\n// date as 2 digits (DD)\nvar date = (\"0\" + date_ob.getDate()).slice(-2);\n\n// hours as 2 digits (hh)\nvar hours = (\"0\" + date_ob.getHours()).slice(-2);\n\n// minutes as 2 digits (mm)\nvar minutes = (\"0\" + date_ob.getMinutes()).slice(-2);\n\n// seconds as 2 digits (ss)\nvar seconds = (\"0\" + date_ob.getSeconds()).slice(-2);\n\n\nmsg = {\n    'tooltip': \"<b>\" + year + \"-\" + month + \"-\" + date +\n        \" \" + hours + \":\" + minutes + \":\" + seconds +\n        \"</b><br/>\" + \"<b>Lat: </b>\" + (msg\n            .gps_1_latitude) +\n        \"<br/><b>Lon: </b>\" + (msg.gps_1_longitude) +\n        \"<br/><b>Batería: </b>\" + (msg.analog_in_8) +\n        \" V\"\n};\nmsgType = \"POST_ATTRIBUTES_REQUEST\";\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 623,
          "layoutY": 175
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardarTooltip",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 340,
          "layoutY": 445
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7200);\n\nif (obj.inactividad.enable===true){\n    metadata.alarmaActual=JSON.stringify(obj.inactividad);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 620,
          "layoutY": 444
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Inactividad\";\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 887,
          "layoutY": 441
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msgType=='INACTIVITY_EVENT') {\n    return ['crear'];\n} else{\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1112,
          "layoutY": 72
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if(msg.alarma.trigger=='entrar'){\n    \n        return ['clear'];\n   \n}else if(msg.alarma.trigger=='salir'){\n   \n        return ['crear'];\n    \n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1492,
          "layoutY": 106
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 44,
          "layoutY": 375
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Alarmas",
        "debugMode": true,
        "configuration": {
          "jsScript": "var respuesta = [];\nif (metadata.hasOwnProperty('ss___alarma_RAK7200')) {\n    var obj = JSON.parse(metadata.ss___alarma_RAK7200);\n    if (metadata.hasOwnProperty('ss___geocercado')&&obj.hasOwnProperty('geocercado')&&msg.hasOwnProperty('gps_1_latitude')&&msg.hasOwnProperty('gps_1_longitude')) {\n        respuesta.push('geocercado');\n    }\n    if (obj.hasOwnProperty('nivelDeBateria')&&msg.hasOwnProperty('analog_in_1')) {\n        respuesta.push('nivelDeBateria');\n    }\n    if (obj.hasOwnProperty('inactividad')&&(msgType=='INACTIVITY_EVENT'||msgType=='ACTIVITY_EVENT')) {\n        \n        respuesta.push('inactividad');\n    }\n}\n\nreturn respuesta;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 45,
          "layoutY": 266
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Cargar alarmas y geocercado",
        "debugMode": true,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "__geocercado",
            "__alarma_RAK7200"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": true,
          "getLatestValueWithTs": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 332,
          "layoutY": 238
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7200);\n\nif (obj.geocercado.enable===true){\n    msg.alarma=obj.geocercado;\n    //Cargo los datos de interés en los metadatos para construir los mensaje de alarma\n    metadata.gps_1_longitude=msg.gps_1_longitude;\n    metadata.gps_1_latitude=msg.gps_1_latitude;\n    metadata.analog_in_8=msg.analog_in_8;//Nivel de batería\n    metadata.alarmaActual=JSON.stringify(obj.geocercado);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1492,
          "layoutY": 45
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 620,
          "layoutY": 239
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "//El nodo de geocercado requiere una propiedad llamada perimeter\nmetadata.perimeter=metadata.ss___geocercado;\nif(msg.alarma.trigger=='entrar'){\n    metadata.tipoAlarma=\"Entrada en geocercado\";\n    \n}else if(msg.alarma.trigger=='salir'){\n    metadata.tipoAlarma=\"Salida de geocercado\";\n}\nreturn {msg:msg,metadata:metadata,msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1757,
          "layoutY": 45
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo \"+metadata.tipoAlarma+\". Sus coordenadas son [lat: \"+metadata.gps_1_latitude+\", lon: \"+metadata.gps_1_longitude+\"] .La tensión de la batería es \"+metadata.analog_in_8+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.gps_1_latitude+'\",\"value3\":\"'+metadata.gps_1_longitude+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1758,
          "layoutY": 108
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado la alarma de tipo \"+metadata.tipoAlarma+\". Sus coordenadas son [lat: \"+metadata.gps_1_latitude+\", lon: \"+metadata.gps_1_longitude+\"] .La tensión de la batería es \"+metadata.analog_in_8+\" V.\";\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.gps_1_latitude+'\",\"value3\":\"'+metadata.gps_1_longitude+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 883,
          "layoutY": 362
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msg.alarma.umbralBateria > msg.analog_in_1) {\n    return ['crear'];\n} else{\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1174,
          "layoutY": 341
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 336,
          "layoutY": 362
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_RAK7200);\n\nif (obj.nivelDeBateria.enable===true){\n    msg.alarma=obj.nivelDeBateria;\n    //Cargo los datos de interés en los metadatos para construir los mensaje de alarma\n    metadata.analog_in_8=msg.analog_in_8;\n    metadata.alarmaActual=JSON.stringify(obj.nivelDeBateria);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1174,
          "layoutY": 280
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 624,
          "layoutY": 363
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Nivel bajo de batería\";\nmetadata.umbralBateria=msg.alarma.umbralBateria;\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1438,
          "layoutY": 296
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo \"+metadata.tipoAlarma+\". La tensión actual de la batería es \"+metadata.analog_in_1+\" V, y el umbral de alarma es \"+metadata.umbralBateria+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1438,
          "layoutY": 348
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo \"+metadata.tipoAlarma+\". La tensión actual de la batería es \"+metadata.analog_in_1+\" V, y el umbral de alarma es \"+metadata.umbralBateria+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 467
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1173,
          "layoutY": 406
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 422
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de inactividad.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1437,
          "layoutY": 474
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo inactividad.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 802,
          "layoutY": 116
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "guardar",
        "debugMode": true,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 563,
          "layoutY": 118
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararMensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "//Convierto el geocercado en una telemetría\n//porque el widget de ruta sólo admite geocercados\n//desde telemetría, pero no parece funcionar bien\nif (metadata.hasOwnProperty('ss___geocercado')) {\n    msg.__geocercado = metadata.ss___geocercado;\n}\nif (msg.hasOwnProperty('gps_1_latitude') && msg\n    .hasOwnProperty('gps_1_longitude')) {\n    msg.latitude = msg.gps_1_latitude;\n    msg.longitude = msg.gps_1_longitude;\n}\nif (msg.hasOwnProperty('gps_1_altitude')) {\n    msg.altitude = msg.gps_1_altitude;\n}\nif (msg.hasOwnProperty('analog_in_0') && msg.hasOwnProperty(\n        'analog_in_10')) {\n    var atan2 = Math.atan2(msg.analog_in_10,\n        msg\n        .analog_in_9);\n    msg.orientacion = ((atan2 / Math.abs(atan2)) * Math.PI -\n        (\n            atan2) * 180) / Math.PI;\n}\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: 'POST_TELEMETRY_REQUEST'\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 335,
          "layoutY": 121
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "geocercado a timeserie",
        "debugMode": true,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "__geocercado"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": false,
          "getLatestValueWithTs": false
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 1,
        "type": "clear"
      },
      {
        "fromIndex": 0,
        "toIndex": 2,
        "type": "crear"
      },
      {
        "fromIndex": 1,
        "toIndex": 4,
        "type": "Cleared"
      },
      {
        "fromIndex": 2,
        "toIndex": 3,
        "type": "Created"
      },
      {
        "fromIndex": 5,
        "toIndex": 0,
        "type": "Entered"
      },
      {
        "fromIndex": 5,
        "toIndex": 12,
        "type": "Left"
      },
      {
        "fromIndex": 6,
        "toIndex": 7,
        "type": "telemetria"
      },
      {
        "fromIndex": 6,
        "toIndex": 34,
        "type": "telemetria"
      },
      {
        "fromIndex": 6,
        "toIndex": 15,
        "type": "alarma"
      },
      {
        "fromIndex": 7,
        "toIndex": 8,
        "type": "Success"
      },
      {
        "fromIndex": 9,
        "toIndex": 10,
        "type": "Success"
      },
      {
        "fromIndex": 10,
        "toIndex": 11,
        "type": "Success"
      },
      {
        "fromIndex": 11,
        "toIndex": 28,
        "type": "clear"
      },
      {
        "fromIndex": 11,
        "toIndex": 29,
        "type": "crear"
      },
      {
        "fromIndex": 12,
        "toIndex": 13,
        "type": "clear"
      },
      {
        "fromIndex": 12,
        "toIndex": 17,
        "type": "crear"
      },
      {
        "fromIndex": 13,
        "toIndex": 20,
        "type": "Cleared"
      },
      {
        "fromIndex": 14,
        "toIndex": 9,
        "type": "inactividad"
      },
      {
        "fromIndex": 14,
        "toIndex": 16,
        "type": "geocercado"
      },
      {
        "fromIndex": 14,
        "toIndex": 23,
        "type": "nivelDeBateria"
      },
      {
        "fromIndex": 15,
        "toIndex": 14,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 18,
        "type": "Success"
      },
      {
        "fromIndex": 17,
        "toIndex": 19,
        "type": "Created"
      },
      {
        "fromIndex": 18,
        "toIndex": 5,
        "type": "Success"
      },
      {
        "fromIndex": 21,
        "toIndex": 22,
        "type": "clear"
      },
      {
        "fromIndex": 21,
        "toIndex": 24,
        "type": "crear"
      },
      {
        "fromIndex": 22,
        "toIndex": 27,
        "type": "Cleared"
      },
      {
        "fromIndex": 23,
        "toIndex": 25,
        "type": "Success"
      },
      {
        "fromIndex": 24,
        "toIndex": 26,
        "type": "Created"
      },
      {
        "fromIndex": 25,
        "toIndex": 21,
        "type": "Success"
      },
      {
        "fromIndex": 28,
        "toIndex": 31,
        "type": "Cleared"
      },
      {
        "fromIndex": 29,
        "toIndex": 30,
        "type": "Created"
      },
      {
        "fromIndex": 33,
        "toIndex": 32,
        "type": "Success"
      },
      {
        "fromIndex": 34,
        "toIndex": 33,
        "type": "Success"
      }
    ],
    "ruleChainConnections": [
      {
        "fromIndex": 3,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 2049,
          "layoutY": 225,
          "ruleChainNodeId": "rule-chain-node-40"
        },
        "type": "Success"
      },
      {
        "fromIndex": 4,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 2049,
          "layoutY": 225,
          "ruleChainNodeId": "rule-chain-node-40"
        },
        "type": "Success"
      },
      {
        "fromIndex": 19,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 2046,
          "layoutY": 95,
          "ruleChainNodeId": "rule-chain-node-39"
        },
        "type": "Success"
      },
      {
        "fromIndex": 20,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 2046,
          "layoutY": 95,
          "ruleChainNodeId": "rule-chain-node-39"
        },
        "type": "Success"
      },
      {
        "fromIndex": 26,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1725,
          "layoutY": 317,
          "ruleChainNodeId": "rule-chain-node-38"
        },
        "type": "Success"
      },
      {
        "fromIndex": 27,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1725,
          "layoutY": 317,
          "ruleChainNodeId": "rule-chain-node-38"
        },
        "type": "Success"
      },
      {
        "fromIndex": 30,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 443,
          "ruleChainNodeId": "rule-chain-node-37"
        },
        "type": "Success"
      },
      {
        "fromIndex": 31,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1724,
          "layoutY": 443,
          "ruleChainNodeId": "rule-chain-node-37"
        },
        "type": "Success"
      }
    ]
  }
}