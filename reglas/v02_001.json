{
  "ruleChain": {
    "additionalInfo": null,
    "name": "V02_001",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 7,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 1201,
          "layoutY": 313
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararDownlink2",
        "debugMode": true,
        "configuration": {
          "jsScript": "var payload = {};\n   \n    payload.port = 99; //Cayenne mydevices manda los downlink por el port 99\n    payload.confirmed = true;\n    payload.schedule='last';\n    payload.payload_raw=\"FF02\"+ msg.___tomarPosesionParam2;\n    \n    \nmsg={\"payload\":JSON.stringify(payload),\"uuid\": msg.uuid};\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1201,
          "layoutY": 372
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararDownlink3",
        "debugMode": true,
        "configuration": {
          "jsScript": "var payload = {};\n   \n    payload.port = 99; //Cayenne mydevices manda los downlink por el port 99\n    payload.confirmed = true;\n    payload.schedule='last';\n    payload.payload_raw=\"FF03\"+ msg.___tomarPosesionParam3;\n    \n    \nmsg={\"payload\":JSON.stringify(payload),\"uuid\": msg.uuid};\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1200,
          "layoutY": 142
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararDownlink",
        "debugMode": true,
        "configuration": {
          "jsScript": "var payload = {};\n   \n    payload.port = 99; //Cayenne mydevices manda los downlink por el port 99\n    payload.confirmed = true;\n    payload.schedule='replace';\n    var valor=parseInt(msg.___heartbeat).toString(16);\n    var pad='00';\n    \n    payload.payload_raw=\"0700\"+ pad.substring(0, pad.length - valor.length) + valor;\n    \n    \nmsg={\"payload\":JSON.stringify(payload),\"uuid\": msg.uuid};\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 889,
          "layoutY": 141
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "operaciones",
        "debugMode": true,
        "configuration": {
          "jsScript": "\n    return ['guardarAtributo','enviarDownlink'];\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1195,
          "layoutY": 65
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "preparar atributos",
        "debugMode": true,
        "configuration": {
          "jsScript": "msg={\"___heartbeat\":msg.___heartbeat};\nmsgType = \"POST_ATTRIBUTES_REQUEST\";\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1459,
          "layoutY": 63
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardar",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 343,
          "layoutY": 107
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "save timeseries",
        "debugMode": true,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 46,
          "layoutY": 207
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "es telemetria?",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msgType == 'POST_TELEMETRY_REQUEST') {\n    if (msg.hasOwnProperty('___ultimoDownlink')) {\n        return ['downlink'];\n    } else {\n        return ['telemetria', 'alarma'];\n    }\n} else if (msgType == 'INACTIVITY_EVENT' || msgType ==\n    'ACTIVITY_EVENT') {\n    return ['alarma'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 339,
          "layoutY": 186
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tooltip",
        "debugMode": true,
        "configuration": {
          "jsScript": "// unix timestamp\nvar ts = metadata.ts;\n\n// convert unix timestamp to milliseconds\nvar ts_ms = ts * 1;\n\n// initialize new Date object\nvar date_ob = new Date(ts_ms);\n\n// year as 4 digits (YYYY)\nvar year = date_ob.getFullYear();\n\n// month as 2 digits (MM)\nvar month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n\n// date as 2 digits (DD)\nvar date = (\"0\" + date_ob.getDate()).slice(-2);\n\n// hours as 2 digits (hh)\nvar hours = (\"0\" + date_ob.getHours()).slice(-2);\n\n// minutes as 2 digits (mm)\nvar minutes = (\"0\" + date_ob.getMinutes()).slice(-2);\n\n// seconds as 2 digits (ss)\nvar seconds = (\"0\" + date_ob.getSeconds()).slice(-2);\n\n\nmsg = {\n    'tooltip': \"<b>\" + year + \"-\" + month + \"-\" + date +\n        \" \" + hours + \":\" + minutes + \":\" + seconds +\n        \"</b><br/>\" + \"<b>Puerta: </b>\" + (msg\n            .digital_in_2 ==\n            1 ? \"Abierta\" : \"Cerrada\") +\n        \"<br/><b>LED: </b>\" + (msg.digital_in_3 == 1 ?\n            \"Encendido\" : \"Apagado\") +\n        \"<br/><b>Bater√≠a: </b>\" + (msg.analog_in_1) +\n        \" V\"\n};\nmsgType = \"POST_ATTRIBUTES_REQUEST\";\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 620,
          "layoutY": 182
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardarTooltip",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 320,
          "layoutY": 669
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_V02_001);\n\nif (obj.inactividad.enable===true){\n    metadata.alarmaActual=JSON.stringify(obj.inactividad);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 600,
          "layoutY": 668
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Inactividad\";\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 867,
          "layoutY": 665
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msgType=='INACTIVITY_EVENT') {\n    return ['crear'];\n} else{\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 859,
          "layoutY": 462
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if(msg.alarma.trigger=='abrir'){\n    \n    if(msg.digital_in_2==1){\n        return ['crear'];\n    }else{\n        return ['clear'];\n    }\n}else if(msg.alarma.trigger=='cerrar'){\n    \n    if(msg.digital_in_2===0){\n        return ['crear'];\n    }else{\n        return ['clear'];\n    }\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1152,
          "layoutY": 496
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 44,
          "layoutY": 375
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Alarmas",
        "debugMode": true,
        "configuration": {
          "jsScript": "var respuesta = [];\nif (metadata.hasOwnProperty('ss___alarma_V02_001')) {\n    var obj = JSON.parse(metadata.ss___alarma_V02_001);\n    if (obj.hasOwnProperty('cambioDeEstado')&&msg.hasOwnProperty('digital_in_2')) {\n        respuesta.push('cambioDeEstado');\n    }\n    if (obj.hasOwnProperty('nivelDeBateria')&&msg.hasOwnProperty('analog_in_1')) {\n        respuesta.push('nivelDeBateria');\n    }\n    if (obj.hasOwnProperty('inactividad')&&(msgType=='INACTIVITY_EVENT'||msgType=='ACTIVITY_EVENT')) {\n        \n        respuesta.push('inactividad');\n    }\n}\n\nreturn respuesta;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 48,
          "layoutY": 291
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Cargar alarmas",
        "debugMode": true,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "__alarma_V02_001"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": true,
          "getLatestValueWithTs": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 312,
          "layoutY": 462
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_V02_001);\n\nif (obj.cambioDeEstado.enable===true){\n    msg.alarma=obj.cambioDeEstado;\n    //Cargo los datos de inter√©s en los metadatos para construir los mensaje de alarma\n    metadata.analog_in_1=msg.analog_in_1;\n    metadata.digital_in_2=msg.digital_in_2;\n    metadata.alarmaActual=JSON.stringify(obj.cambioDeEstado);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1152,
          "layoutY": 435
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 600,
          "layoutY": 463
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "if(msg.alarma.trigger=='abrir'){\n    metadata.tipoAlarma=\"Puerta abierta\";\n    \n}else if(msg.alarma.trigger=='cerrar'){\n    metadata.tipoAlarma=\"Puerta cerrada\";\n}\nreturn {msg:msg,metadata:metadata,msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1417,
          "layoutY": 435
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo \"+metadata.tipoAlarma+\". La tensi√≥n de la bater√≠a es \"+metadata.analog_in_1+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1418,
          "layoutY": 498
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado la alarma de tipo \"+metadata.tipoAlarma+\". La tensi√≥n de la bater√≠a es \"+metadata.analog_in_1+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 863,
          "layoutY": 586
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "C[r/l]ear",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (msg.alarma.umbralBateria > msg.analog_in_1) {\n    return ['crear'];\n} else{\n    return ['clear'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1156,
          "layoutY": 620
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 316,
          "layoutY": 586
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Activada?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var obj = JSON.parse(metadata.ss___alarma_V02_001);\n\nif (obj.nivelDeBateria.enable===true){\n    msg.alarma=obj.nivelDeBateria;\n    //Cargo los datos de inter√©s en los metadatos para construir los mensaje de alarma\n    metadata.analog_in_1=msg.analog_in_1;\n    metadata.alarmaActual=JSON.stringify(obj.nivelDeBateria);\n    \n   return {\n        msg: msg,\n        metadata: metadata,\n        msgType: msgType\n    };\n}\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1156,
          "layoutY": 559
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 604,
          "layoutY": 587
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "tipoAlarma",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.tipoAlarma = \"Nivel bajo de bater√≠a\";\nmetadata.umbralBateria=msg.alarma.umbralBateria;\n\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1420,
          "layoutY": 575
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de tipo \"+metadata.tipoAlarma+\". La tensi√≥n actual de la bater√≠a es \"+metadata.analog_in_1+\" V, y el umbral de alarma es \"+metadata.umbralBateria+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1420,
          "layoutY": 627
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo \"+metadata.tipoAlarma+\". La tensi√≥n actual de la bater√≠a es \"+metadata.analog_in_1+\" V, y el umbral de alarma es \"+metadata.umbralBateria+\" V.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1155,
          "layoutY": 746
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1155,
          "layoutY": 685
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Crear alarma",
        "debugMode": true,
        "configuration": {
          "alarmType": "${tipoAlarma}",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false,
          "relationTypes": [
            "Contains"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1419,
          "layoutY": 701
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha generado una alarma de inactividad.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1419,
          "layoutY": 753
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "construir mensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.mensajeTelegram=\"El dispositivo \" + metadata.deviceName.split(\"_\")[1]+\" ha anulado una alarma de tipo inactividad.\";\n\nmetadata.mensajeIfttt='{\"value1\":\"'+metadata.deviceName.split(\"_\")[1]+'\",\"value2\":\"'+metadata.digital_in_2+'\",\"value3\":\"'+metadata.analog_in_1+'\"}';\n\nmetadata.mensajeEmail=metadata.mensajeTelegram;\nmetadata.asuntoEmail=\"[IoT open Tech] \"+metadata.deviceName.split(\"_\")[1]+\": Alarma anulada \"+metadata.tipoAlarma;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 617,
          "layoutY": 251
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "tipoDonwlink?",
        "debugMode": true,
        "configuration": {
          "jsScript": "if(msg.___ultimoDownlink=='heartbeat'){\n    return['heartbeat'];\n}else if(msg.___ultimoDownlink=='tomarPosesion'){\n    return['tomarPosesion'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 341,
          "layoutY": 251
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "uuid",
        "debugMode": true,
        "configuration": {
          "jsScript": "msg.uuid=metadata.idEntidad;\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1201,
          "layoutY": 256
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararDownlink1",
        "debugMode": true,
        "configuration": {
          "jsScript": "var payload = {};\n   \n    payload.port = 99; //Cayenne mydevices manda los downlink por el port 99\n    payload.confirmed = true;\n    payload.schedule='last';\n    payload.payload_raw=\"FF01\"+ msg.___tomarPosesionParam1;\n    \n    \nmsg={\"payload\":JSON.stringify(payload),\"uuid\": msg.uuid};\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 882,
          "layoutY": 343
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "operaciones",
        "debugMode": true,
        "configuration": {
          "jsScript": "\n    return ['guardarAtributo','enviarDownlink'];\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1200,
          "layoutY": 198
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "preparar atributos",
        "debugMode": true,
        "configuration": {
          "jsScript": "\nmsg={\"___tomarPosesionMetodoActivacion\":msg.___tomarPosesionMetodoActivacion,\n    \"___tomarPosesionParam1\":msg.___tomarPosesionParam1,\n    \"___tomarPosesionParam2\":msg.___tomarPosesionParam2,\n    \"___tomarPosesionParam3\":msg.___tomarPosesionParam3\n};\nmsgType = \"POST_ATTRIBUTES_REQUEST\";\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1464,
          "layoutY": 196
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardar",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 3,
        "toIndex": 4,
        "type": "guardarAtributo"
      },
      {
        "fromIndex": 3,
        "toIndex": 2,
        "type": "enviarDownlink"
      },
      {
        "fromIndex": 4,
        "toIndex": 5,
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "toIndex": 34,
        "type": "downlink"
      },
      {
        "fromIndex": 7,
        "toIndex": 16,
        "type": "alarma"
      },
      {
        "fromIndex": 7,
        "toIndex": 8,
        "type": "telemetria"
      },
      {
        "fromIndex": 7,
        "toIndex": 6,
        "type": "telemetria"
      },
      {
        "fromIndex": 8,
        "toIndex": 9,
        "type": "Success"
      },
      {
        "fromIndex": 10,
        "toIndex": 11,
        "type": "Success"
      },
      {
        "fromIndex": 11,
        "toIndex": 12,
        "type": "Success"
      },
      {
        "fromIndex": 12,
        "toIndex": 29,
        "type": "clear"
      },
      {
        "fromIndex": 12,
        "toIndex": 30,
        "type": "crear"
      },
      {
        "fromIndex": 13,
        "toIndex": 14,
        "type": "clear"
      },
      {
        "fromIndex": 13,
        "toIndex": 18,
        "type": "crear"
      },
      {
        "fromIndex": 14,
        "toIndex": 21,
        "type": "Cleared"
      },
      {
        "fromIndex": 15,
        "toIndex": 10,
        "type": "inactividad"
      },
      {
        "fromIndex": 15,
        "toIndex": 17,
        "type": "cambioDeEstado"
      },
      {
        "fromIndex": 15,
        "toIndex": 24,
        "type": "nivelDeBateria"
      },
      {
        "fromIndex": 16,
        "toIndex": 15,
        "type": "Success"
      },
      {
        "fromIndex": 17,
        "toIndex": 19,
        "type": "Success"
      },
      {
        "fromIndex": 18,
        "toIndex": 20,
        "type": "Created"
      },
      {
        "fromIndex": 19,
        "toIndex": 13,
        "type": "Success"
      },
      {
        "fromIndex": 22,
        "toIndex": 23,
        "type": "clear"
      },
      {
        "fromIndex": 22,
        "toIndex": 25,
        "type": "crear"
      },
      {
        "fromIndex": 23,
        "toIndex": 28,
        "type": "Cleared"
      },
      {
        "fromIndex": 24,
        "toIndex": 26,
        "type": "Success"
      },
      {
        "fromIndex": 25,
        "toIndex": 27,
        "type": "Created"
      },
      {
        "fromIndex": 26,
        "toIndex": 22,
        "type": "Success"
      },
      {
        "fromIndex": 29,
        "toIndex": 32,
        "type": "Cleared"
      },
      {
        "fromIndex": 30,
        "toIndex": 31,
        "type": "Created"
      },
      {
        "fromIndex": 33,
        "toIndex": 36,
        "type": "tomarPosesion"
      },
      {
        "fromIndex": 33,
        "toIndex": 3,
        "type": "heartbeat"
      },
      {
        "fromIndex": 34,
        "toIndex": 33,
        "type": "Success"
      },
      {
        "fromIndex": 36,
        "toIndex": 37,
        "type": "guardarAtributo"
      },
      {
        "fromIndex": 36,
        "toIndex": 35,
        "type": "enviarDownlink"
      },
      {
        "fromIndex": 36,
        "toIndex": 0,
        "type": "enviarDownlink"
      },
      {
        "fromIndex": 36,
        "toIndex": 1,
        "type": "enviarDownlink"
      },
      {
        "fromIndex": 37,
        "toIndex": 38,
        "type": "Success"
      }
    ],
    "ruleChainConnections": [
      {
        "fromIndex": 0,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "f48eef20-abc0-11ea-b825-09d866a6d73c"
        },
        "additionalInfo": {
          "layoutX": 1475,
          "layoutY": 309,
          "ruleChainNodeId": "rule-chain-node-41"
        },
        "type": "Success"
      },
      {
        "fromIndex": 1,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "f48eef20-abc0-11ea-b825-09d866a6d73c"
        },
        "additionalInfo": {
          "layoutX": 1475,
          "layoutY": 309,
          "ruleChainNodeId": "rule-chain-node-41"
        },
        "type": "Success"
      },
      {
        "fromIndex": 2,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "f48eef20-abc0-11ea-b825-09d866a6d73c"
        },
        "additionalInfo": {
          "layoutX": 1463,
          "layoutY": 144,
          "ruleChainNodeId": "rule-chain-node-45"
        },
        "type": "Success"
      },
      {
        "fromIndex": 20,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1706,
          "layoutY": 485,
          "ruleChainNodeId": "rule-chain-node-44"
        },
        "type": "Success"
      },
      {
        "fromIndex": 21,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1706,
          "layoutY": 485,
          "ruleChainNodeId": "rule-chain-node-44"
        },
        "type": "Success"
      },
      {
        "fromIndex": 27,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1707,
          "layoutY": 596,
          "ruleChainNodeId": "rule-chain-node-43"
        },
        "type": "Success"
      },
      {
        "fromIndex": 28,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1707,
          "layoutY": 596,
          "ruleChainNodeId": "rule-chain-node-43"
        },
        "type": "Success"
      },
      {
        "fromIndex": 31,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1706,
          "layoutY": 722,
          "ruleChainNodeId": "rule-chain-node-42"
        },
        "type": "Success"
      },
      {
        "fromIndex": 32,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "61d05910-9de4-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 1706,
          "layoutY": 722,
          "ruleChainNodeId": "rule-chain-node-42"
        },
        "type": "Success"
      },
      {
        "fromIndex": 35,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "f48eef20-abc0-11ea-b825-09d866a6d73c"
        },
        "additionalInfo": {
          "layoutX": 1475,
          "layoutY": 309,
          "ruleChainNodeId": "rule-chain-node-41"
        },
        "type": "Success"
      }
    ]
  }
}