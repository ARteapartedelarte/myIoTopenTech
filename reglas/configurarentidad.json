{
  "ruleChain": {
    "additionalInfo": null,
    "name": "configurarEntidad",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 12,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 897,
          "layoutY": 481
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "existe relacion anterior?",
        "debugMode": true,
        "configuration": {
          "jsScript": "//ss_devEUI (el antiguo devEUI) puede no existir => Continuar con relación nueva\n//o puede existir y estar vacio => Continuar con relación nueva\n//o puede existir y contener un devEUI válido distinto del nuevo => Borrar relacion anterior \n//Sólo si no es un ss_esDelegado\nif(!metadata.hasOwnProperty('ss_esDelegado')||metadata.ss_esDelegado=='false'){\n    //si ss_devEUI no existe\n    if(!metadata.hasOwnProperty('ss_devEUI')){\n        return ['continuarRelacionNueva'];\n    }else{\n        if(metadata.ss_devEUI.length==0){\n            //Si es nulo\n            return ['continuarRelacionNueva'];\n        }else{\n            //Si no es nulo ()\n            //y es diferente del nuevo\n            if(msg.configuracion.___atributosCompartidos.devEUI!=metadata.ss_devEUI){\n            return ['borrarRelacionAnterior'];\n            }\n        }\n    }\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1273,
          "layoutY": 474
        },
        "type": "org.thingsboard.rule.engine.action.TbDeleteRelationNode",
        "name": "borrar anterior",
        "debugMode": true,
        "configuration": {
          "direction": "FROM",
          "relationType": "${ss_devEUI}",
          "entityType": null,
          "entityNamePattern": "",
          "entityTypePattern": null,
          "entityCacheExpiration": 300,
          "deleteForSingleEntity": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1608,
          "layoutY": 778
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "preparar atributos",
        "debugMode": true,
        "configuration": {
          "jsScript": "msgType = 'POST_ATTRIBUTES_REQUEST';\n//Valido los atributos que admito modificar\nvar atributosCompartidos=JSON.parse(metadata.configuracion)['___atributosCompartidos'];\nvar mensaje={'devEUI':atributosCompartidos.devEUI,'___atributosCompartidos':atributosCompartidos};\n\nreturn {msg: mensaje, metadata: metadata, msgType: msgType};\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1607,
          "layoutY": 854
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardar atributos",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1606,
          "layoutY": 703
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateRelationNode",
        "name": "crear nueva",
        "debugMode": true,
        "configuration": {
          "direction": "FROM",
          "relationType": "${devEUI_nuevo}",
          "entityType": "DEVICE",
          "entityNamePattern": "${customerName}_CONTROL",
          "entityTypePattern": "SYSTEM",
          "entityCacheExpiration": 300,
          "createEntityIfNotExists": false,
          "changeOriginatorToRelatedEntity": false,
          "removeCurrentRelations": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1272,
          "layoutY": 553
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetCustomerDetailsNode",
        "name": "customer name",
        "debugMode": true,
        "configuration": {
          "detailsList": [
            "TITLE"
          ],
          "addToMetadata": true
        }
      },
      {
        "additionalInfo": {
          "layoutX": 904,
          "layoutY": 411
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "devEUI/esDelegado",
        "debugMode": true,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "devEUI",
            "esDelegado"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": false,
          "getLatestValueWithTs": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 615,
          "layoutY": 411
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararMensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "//Sólo necesito pasar los parámetros con triple guión bajo ___\nmsgType = 'POST_TELEMETRY_REQUEST';\nmetadata.deviceType=metadata.subtipoEntidad;\nvar mensaje = {};\n\nvar configuracion = JSON.parse(metadata.configuracion);\n\nfor (var clave in configuracion) {\n    if (clave.substr(0, 3) == \"___\") {\n        mensaje[clave] = configuracion[clave];\n        \n    } else {\n        //La ignoro\n    }\n}\nreturn {\n    msg: mensaje,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 607,
          "layoutY": 308
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "atributosOdownlink?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var configuracion = JSON.parse(metadata.configuracion);\nif (configuracion.hasOwnProperty('___ultimoDownlink') &&\n    configuracion.___ultimoDownlink !== '') {\n    if (configuracion.___ultimoDownlink == 'devEUI') {\n        return ['devEUI'];\n    } else {\n        return ['downlink'];\n    }\n} else {\n    return ['atributos'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 332,
          "layoutY": 306
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode",
        "name": "obtener tipo",
        "debugMode": true,
        "configuration": {
          "fieldsMapping": {
            "type": "subtipoEntidad"
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 330,
          "layoutY": 244
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode",
        "name": "originador?",
        "debugMode": true,
        "configuration": {
          "fieldsMapping": {
            "name": "customerName"
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 605,
          "layoutY": 235
        },
        "type": "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode",
        "name": "Originator=Entidad",
        "debugMode": true,
        "configuration": {
          "originatorSource": "RELATED",
          "relationsQuery": {
            "direction": "FROM",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "${idEntidad}",
                "entityTypes": []
              }
            ],
            "fetchLastLevelOnly": false
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 323,
          "layoutY": 154
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Validacion",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.idEntidad = msg.idEntidad;\nif (msg.hasOwnProperty('configuracion')) {\n    metadata.configuracion = JSON.stringify(msg.configuracion);\n}\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 603,
          "layoutY": 156
        },
        "type": "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode",
        "name": "Originador=Customer",
        "debugMode": true,
        "configuration": {
          "originatorSource": "CUSTOMER",
          "relationsQuery": {
            "direction": "FROM",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "Contains",
                "entityTypes": []
              }
            ],
            "fetchLastLevelOnly": false
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 322,
          "layoutY": 511
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardarAtributos",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 318,
          "layoutY": 408
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararMensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "msgType = 'POST_ATTRIBUTES_REQUEST';\n\nvar mensaje = {};\n//Las alarmas se guardan siempre\nvar configuracion = JSON.parse(metadata.configuracion);\n\n\nfor (var clave in configuracion) {\n    if (clave.substr(0, 3) == \"___\") {\n        //La ignoro\n    } else {\n        if (clave == '__alarmas') {\n            var alarma = JSON.parse(configuracion\n                .__alarmas);\n            mensaje[\"__alarma_\" + metadata.subtipoEntidad] =\n                alarma;\n            //Si incluye una alarma de inactividad tengo que actualizar el parámetro del servidor inactivityTimeout\n            \n            if (alarma.hasOwnProperty('inactividad') &&\n                alarma.inactividad.hasOwnProperty(\n                    'enable') && alarma.inactividad\n                .enable ===\n                true) {\n                mensaje.inactivityTimeout = parseInt(\n                    alarma.inactividad\n                    .umbralInactividad) * 1000;\n            }\n        } else {\n            mensaje[clave] = configuracion[clave];\n        }\n    }\n}\nreturn {\n    msg: mensaje,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1268,
          "layoutY": 623
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "extraer devEUI_nuevo",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.devEUI_nuevo=JSON.parse(metadata.configuracion)['___atributosCompartidos']['devEUI'];\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1275,
          "layoutY": 698
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "metadata.devEUI_nuevo.length>0",
        "debugMode": true,
        "configuration": {
          "jsScript": "if (metadata.hasOwnProperty('devEUI_nuevo') && metadata.devEUI_nuevo.length>0){\n    return ['crearRelacion'];\n}else{\n    return ['borrarAtributo'];\n}"
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 1,
        "type": "borrarRelacionAnterior"
      },
      {
        "fromIndex": 0,
        "toIndex": 5,
        "type": "continuarRelacionNueva"
      },
      {
        "fromIndex": 1,
        "toIndex": 5,
        "type": "Success"
      },
      {
        "fromIndex": 2,
        "toIndex": 3,
        "type": "Success"
      },
      {
        "fromIndex": 4,
        "toIndex": 2,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 16,
        "type": "Success"
      },
      {
        "fromIndex": 6,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 8,
        "toIndex": 6,
        "type": "devEUI"
      },
      {
        "fromIndex": 8,
        "toIndex": 15,
        "type": "atributos"
      },
      {
        "fromIndex": 8,
        "toIndex": 7,
        "type": "downlink"
      },
      {
        "fromIndex": 9,
        "toIndex": 8,
        "type": "Success"
      },
      {
        "fromIndex": 10,
        "toIndex": 11,
        "type": "Success"
      },
      {
        "fromIndex": 11,
        "toIndex": 9,
        "type": "Success"
      },
      {
        "fromIndex": 12,
        "toIndex": 13,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 10,
        "type": "Success"
      },
      {
        "fromIndex": 15,
        "toIndex": 14,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 17,
        "type": "Success"
      },
      {
        "fromIndex": 17,
        "toIndex": 2,
        "type": "borrarAtributo"
      },
      {
        "fromIndex": 17,
        "toIndex": 4,
        "type": "crearRelacion"
      }
    ],
    "ruleChainConnections": [
      {
        "fromIndex": 7,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "9e0e1260-2010-11eb-800c-43a360f58fa3"
        },
        "additionalInfo": {
          "layoutX": 613,
          "layoutY": 500,
          "ruleChainNodeId": "rule-chain-node-20"
        },
        "type": "Success"
      }
    ]
  }
}