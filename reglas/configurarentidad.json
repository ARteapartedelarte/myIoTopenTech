{
  "ruleChain": {
    "additionalInfo": null,
    "name": "configurarEntidad",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 3,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 282,
          "layoutY": 305
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararMensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "msgType = 'POST_ATTRIBUTES_REQUEST';\n\nvar mensaje = {};\n//Las alarmas se guardan siempre\nvar configuracion = JSON.parse(metadata.configuracion);\n\n\nfor (var clave in configuracion) {\n    if (clave.substr(0, 3) == \"___\") {\n        //La ignoro\n    } else {\n        if (clave == '__alarmas') {\n            mensaje[\"__alarma_\" + metadata.subtipoEntidad] =\n                configuracion.__alarmas;\n            //Si incluye una alarma de inactividad tengo que actualizar el par치metro del servidor inactivityTimeout\n            var alarma = JSON.parse(configuracion\n                .__alarmas);\n            if (alarma.hasOwnProperty('inactividad') &&\n                alarma.inactividad.hasOwnProperty(\n                    'enable') && alarma.inactividad\n                .enable ===\n                true) {\n                mensaje.inactivityTimeout = parseInt(\n                    alarma.inactividad\n                    .umbralInactividad) * 1000;\n            }\n        } else {\n            mensaje[clave] = configuracion[clave];\n        }\n    }\n}\nreturn {\n    msg: mensaje,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 286,
          "layoutY": 408
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "guardarAtributos",
        "debugMode": true,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 567,
          "layoutY": 53
        },
        "type": "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode",
        "name": "Originador=Customer",
        "debugMode": true,
        "configuration": {
          "originatorSource": "CUSTOMER",
          "relationsQuery": {
            "direction": "FROM",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "Contains",
                "entityTypes": []
              }
            ],
            "fetchLastLevelOnly": false
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 287,
          "layoutY": 51
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Validacion",
        "debugMode": true,
        "configuration": {
          "jsScript": "metadata.idEntidad = msg.idEntidad;\nif (msg.hasOwnProperty('configuracion')) {\n    metadata.configuracion = JSON.stringify(msg.configuracion);\n}\nreturn {\n    msg: msg,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 569,
          "layoutY": 132
        },
        "type": "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode",
        "name": "Originator=Entidad",
        "debugMode": true,
        "configuration": {
          "originatorSource": "RELATED",
          "relationsQuery": {
            "direction": "FROM",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "${idEntidad}",
                "entityTypes": []
              }
            ],
            "fetchLastLevelOnly": false
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 294,
          "layoutY": 141
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode",
        "name": "originador?",
        "debugMode": true,
        "configuration": {
          "fieldsMapping": {
            "name": "customerName"
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 296,
          "layoutY": 203
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode",
        "name": "obtener tipo",
        "debugMode": true,
        "configuration": {
          "fieldsMapping": {
            "type": "subtipoEntidad"
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 571,
          "layoutY": 205
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "atributosOdownlink?",
        "debugMode": true,
        "configuration": {
          "jsScript": "var configuracion = JSON.parse(metadata.configuracion);\nif (configuracion.hasOwnProperty('___ultimoDownlink') &&\n    configuracion.___ultimoDownlink !== '') {\n    return ['downlink'];\n} else {\n    return ['atributos'];\n}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 579,
          "layoutY": 308
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "prepararMensaje",
        "debugMode": true,
        "configuration": {
          "jsScript": "//S칩lo necesito pasar los par치metros con triple gui칩n bajo ___\nmsgType = 'POST_TELEMETRY_REQUEST';\nmetadata.deviceType=metadata.subtipoEntidad;\nvar mensaje = {};\n\nvar configuracion = JSON.parse(metadata.configuracion);\n\nfor (var clave in configuracion) {\n    if (clave.substr(0, 3) == \"___\") {\n        mensaje[clave] = configuracion[clave];\n        \n    } else {\n        //La ignoro\n    }\n}\nreturn {\n    msg: mensaje,\n    metadata: metadata,\n    msgType: msgType\n};"
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 1,
        "type": "Success"
      },
      {
        "fromIndex": 2,
        "toIndex": 5,
        "type": "Success"
      },
      {
        "fromIndex": 3,
        "toIndex": 2,
        "type": "Success"
      },
      {
        "fromIndex": 4,
        "toIndex": 6,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 6,
        "toIndex": 7,
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "toIndex": 8,
        "type": "downlink"
      },
      {
        "fromIndex": 7,
        "toIndex": 0,
        "type": "atributos"
      }
    ],
    "ruleChainConnections": [
      {
        "fromIndex": 8,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "7cadfbb0-9de5-11ea-abf5-9397c4646ed8"
        },
        "additionalInfo": {
          "layoutX": 583,
          "layoutY": 407,
          "ruleChainNodeId": "rule-chain-node-11"
        },
        "type": "Success"
      }
    ]
  }
}