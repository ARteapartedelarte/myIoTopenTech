{
  "title": "Configuración",
  "configuration": {
    "widgets": {
      "fba8b82f-4b63-d360-68e1-9481f57706b1": {
        "isSystemType": true,
        "bundleAlias": "cards",
        "typeAlias": "entities_hierarchy",
        "type": "latest",
        "title": "New widget",
        "sizeX": 9,
        "sizeY": 11,
        "config": {
          "timewindow": {
            "realtime": {
              "interval": 1000,
              "timewindowMs": 86400000
            },
            "aggregation": {
              "type": "NONE",
              "limit": 200
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "4px",
          "settings": {
            "nodeRelationQueryFunction": "/**\n\n// Function should return relations query object for current node used to fetch entity children.\n// Function can return 'default' string value. In this case default relations query will be used.\n\n// The following example code will construct simple relations query that will fetch relations of type 'Contains'\n// from the current entity.\n\nvar entity = nodeCtx.entity;\nvar query = {\n    parameters: {\n        rootId: entity.id.id,\n        rootType: entity.id.entityType,\n        direction: types.entitySearchDirection.from,\n        relationTypeGroup: \"COMMON\",\n        maxLevel: 1\n    },\n    filters: [{\n        relationType: \"Contains\",\n        entityTypes: []\n    }]\n};\nreturn query;\n\n**/\n",
            "nodeHasChildrenFunction": "/**\n\n// Function should return boolean value indicating whether current node has children (whether it can be expanded).\n\n// The following example code will restrict entities hierarchy expansion up to third level.\n\nreturn nodeCtx.level <= 2;\n\n// The next example code will restrict entities expansion according to the value of example 'nodeHasChildren' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeHasChildren') && data['nodeHasChildren'] !== null) {\n    return data['nodeHasChildren'] === 'true';\n} else {\n    return true;\n}\n  \n**/\n ",
            "nodeTextFunction": "/**\n\n// Function should return text (can be HTML code) for the current node.\n\n// The following example code will generate node text consisting of entity name and temperature if temperature value is present in entity attributes/timeseries.\n\nvar data =  nodeCtx.data;\nvar entity = nodeCtx.entity;\nvar text = entity.name;\nif (data.hasOwnProperty('temperature') && data['temperature'] !== null) {\n    text += \" <b>\"+ data['temperature'] +\" °C</b>\";\n}\nreturn text;\n\n**/\n\n//return \" <b>\"+nodeCtx.data['nombreEntidad']+\"</b>\";\nvar entity = nodeCtx.entity;\nvar nombreCompleto = entity.name;\nvar nombre = nombreCompleto.substring(nombreCompleto.indexOf(\"_\")+1);\nreturn nombre;",
            "nodeIconFunction": "/** \n\n// Function should return node icon info object.\n// Resulting object should contain either 'materialIcon' or 'iconUrl' property. \n// Where:\n    - 'materialIcon' - name of the material icon to be used from the Material Icons Library (https://material.io/tools/icons);\n    - 'iconUrl' - url of the external image to be used as node icon.\n// Function can return 'default' string value. In this case default icons according to entity type will be used.\n\n// The following example code shows how to use external image for devices which name starts with 'Test' and use \n// default icons for the rest of entities.\n\nvar entity = nodeCtx.entity;\nif (entity.id.entityType === 'DEVICE' && entity.name.startsWith('Test')) {\n    return {iconUrl: 'https://avatars1.githubusercontent.com/u/14793288?v=4&s=117'};\n} else {\n    return 'default';\n}\n \n**/",
            "nodeDisabledFunction": "/**\n\n// Function should return boolean value indicating whether current node should be disabled (not selectable).\n\n// The following example code will disable current node according to the value of example 'nodeDisabled' attribute.\n\nvar data = nodeCtx.data;\nif (data.hasOwnProperty('nodeDisabled') && data['nodeDisabled'] !== null) {\n    return data['nodeDisabled'] === 'true';\n} else {\n    return false;\n}\n  \n**/\n",
            "nodesSortFunction": "/**\n\n// This function is used to sort nodes of the same level. Function should compare two nodes and return \n// integer value: \n//     - less than 0 - sort nodeCtx1 to an index lower than nodeCtx2\n//     - 0 - leave nodeCtx1 and nodeCtx2 unchanged with respect to each other\n//     - greater than 0 - sort nodeCtx2 to an index lower than nodeCtx1\n\n// The following example code will sort entities first by entity type in alphabetical order then\n// by entity name in alphabetical order.\n\nvar result = nodeCtx1.entity.id.entityType.localeCompare(nodeCtx2.entity.id.entityType);\nif (result === 0) {\n    result = nodeCtx1.entity.name.localeCompare(nodeCtx2.entity.name);\n}\nreturn result;\n  \n**/",
            "nodeOpenedFunction": "/**\n\n// Function should return boolean value indicating whether current node should be opened (expanded) when it first loaded.\n\n// The following example code will open by default nodes up to third level.\n\nreturn nodeCtx.level <= 2;\n\n**/\n //return nodeCtx.level <=1;"
          },
          "title": "ACTIVOS Y DISPOSITIVOS",
          "dropShadow": true,
          "enableFullscreen": true,
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400,
            "padding": "5px 10px 5px 10px"
          },
          "useDashboardTimewindow": false,
          "showLegend": false,
          "datasources": [
            {
              "type": "entity",
              "dataKeys": [],
              "entityAliasId": "bc41b835-4a1d-49fc-de3b-142ec2484fd4"
            }
          ],
          "widgetStyle": {},
          "actions": {
            "nodeSelected": [
              {
                "id": "a7202234-d4a6-48e7-81ed-4cbc6e19ecab",
                "name": "click",
                "icon": "more_horiz",
                "type": "customPretty",
                "customHtml": "\r\n<md-dialog flex aria-label=\"Edit entity\">\r\n  \r\n\r\n    <md-tabs md-dynamic-height md-border-bottom>\r\n        <md-tab label=\"Editar\">\r\n            <form name=\"form.editEntityFormNull\"\r\n                ng-if=\"vm.entity.type=='ROOT'\">\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Editar activo ROOT\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\">El activo\r\n                        ROOT es un requisito del\r\n                        sistema\r\n                        que no se puede editar.</div>\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-primary\">Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n            <form name=\"form.editEntityForm\"\r\n                class=\"edit-entity-form\"\r\n                ng-submit=\"vm.save()\"\r\n                ng-if=\"vm.entity.type!='ROOT'\">\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Editar\r\n                            {{vm.entityType.toLowerCase()==\"asset\"?\"activo\":\"dispositivo\"}}\r\n                            {{vm.attributes.nombreEntidad}}\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\">\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex\r\n                                class=\"md-block\">\r\n                                <label>Nombre</label>\r\n                                <input type=\"text\"\r\n                                    ng-model=\"vm.attributes.nombreEntidad\"\r\n                                    required>\r\n                            </md-input-container>\r\n                            <md-input-container flex\r\n                                class=\"md-block\">\r\n                                <label>Tipo</label>\r\n                                <md-select\r\n                                    ng-model=\"vm.attributes.tipoEntidad\"\r\n                                    required>\r\n                                    <md-option\r\n                                        ng-if=\"vm.entityType.toLowerCase()=='device'\"\r\n                                        ng-repeat=\"tipo in vm.tiposDeDispositivos\"\r\n                                        ng-value=\"tipo\"\r\n                                        ng-selected=\"{{tipo == vm.attributes.tipoEntidad}}\">\r\n                                        {{tipo}}\r\n                                    </md-option>\r\n                                    <md-option\r\n                                        ng-if=\"vm.entityType.toLowerCase()=='asset'\"\r\n                                        ng-repeat=\"tipo in vm.tiposDeActivos\"\r\n                                        ng-value=\"tipo\"\r\n                                        ng-selected=\"{{tipo == vm.attributes.tipoEntidad}}\">\r\n                                        {{tipo}}\r\n                                    </md-option>\r\n                                </md-select>\r\n                            </md-input-container>\r\n                            <md-input-container flex\r\n                                class=\"md-block\">\r\n                                <label>Padre</label>\r\n                                <md-select\r\n                                    ng-model=\"vm.padre\"\r\n                                    required>\r\n                                    <md-option\r\n                                        ng-repeat=\"(name,valor) in vm.activos\"\r\n                                        ng-value=\"name\"\r\n                                        ng-selected=\"{{name == vm.padre}}\">\r\n                                        {{valor.atributos.nombreEntidad}}/{{valor.atributos.tipoEntidad}}\r\n                                    </md-option>\r\n                                </md-select>\r\n                            </md-input-container>\r\n                        </div>\r\n                    </div>\r\n\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button type=\"submit\"\r\n                        ng-disabled=\"form.editEntityForm.$invalid || !form.editEntityForm.$dirty\"\r\n                        class=\"md-raised md-primary\">Aceptar\r\n                    </md-button>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-primary\">Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n        </md-tab>\r\n\r\n        <md-tab label=\"crear\">\r\n            <form name=\"form.addEntityFormNull\"\r\n                ng-if=\"vm.entityType.toLowerCase()=='device'\">\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Crear entidad hija de\r\n                            {{vm.attributes.nombreEntidad}}\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\">No se\r\n                        pueden crear entidades hijas de\r\n                        dispositivos.</div>\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-primary\">Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n            <form name=\"form.addEntityForm\"\r\n                class=\"add-entity-form\"\r\n                ng-submit=\"vm.crear()\"\r\n                ng-if=\"vm.entityType.toLowerCase()!='device'\">\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Crear entidad hija de\r\n                            {{vm.attributes.nombreEntidad}}\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\">\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Nombre</label>\r\n                                <input type=\"text\"\r\n                                    ng-model=\"vm.crearEntidad.nombreEntidad\"\r\n                                    name=nombreEntidad\r\n                                    required>\r\n                                <div\r\n                                    ng-messages=\"addEntityForm.nombreEntidad.$error\">\r\n                                    <div\r\n                                        ng-message=\"required\">\r\n                                        Es obligatorio\r\n                                        indicar un nombre.\r\n                                    </div>\r\n                                </div>\r\n                            </md-input-container>\r\n                            <tb-entity-type-select\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\"\r\n                                the-form=\"addEntityForm\"\r\n                                tb-required=\"true\"\r\n                                allowed-entity-types=\"vm.allowedEntityTypes\"\r\n                                ng-model=\"vm.crearEntidad.tipoEntidad\">\r\n                            </tb-entity-type-select>\r\n\r\n                            <md-input-container flex\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Tipo de\r\n                                    {{vm.crearEntidad.tipoEntidad=='DEVICE'?'dispositivo':'activo'}}</label>\r\n                                <md-select\r\n                                    ng-model=\"vm.crearEntidad.subtipoEntidad\">\r\n                                    <md-option\r\n                                        ng-if=\"vm.crearEntidad.tipoEntidad.toLowerCase()=='device'\"\r\n                                        ng-repeat=\"tipo in vm.tiposDeDispositivos\"\r\n                                        ng-value=\"tipo\"\r\n                                        ng-selected=\"\">\r\n                                        {{tipo}}\r\n                                    </md-option>\r\n                                    <md-option\r\n                                        ng-if=\"vm.crearEntidad.tipoEntidad.toLowerCase()=='asset'\"\r\n                                        ng-repeat=\"tipo in vm.tiposDeActivos\"\r\n                                        ng-value=\"tipo\"\r\n                                        ng-selected=\"\">\r\n                                        {{tipo}}\r\n                                    </md-option>\r\n                                </md-select>\r\n                            </md-input-container>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button type=\"submit\"\r\n                        ng-disabled=\"form.addEntityForm.$invalid || !form.addEntityForm.$dirty\"\r\n                        class=\"md-raised md-primary\">Crear\r\n                    </md-button>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-primary\">Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n        </md-tab>\r\n\r\n        <md-tab ng-if=\"vm.configurable\" label=\"configurar\">\r\n            <form name=\"form.configureEntityForm\"\r\n                class=\"configure-entity-form\"\r\n                ng-submit=\"vm.configurar()\">\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Configurar\r\n                            {{vm.attributes.nombreEntidad}}\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\" flex>\r\n                        <!-- CONFIGURACIÓN DEL NODO -->\r\n                        <sustituir class=\"ng-scope\"></sustituir>\r\n                        <!-- CONFIGURACIÓN DEL NODO -->\r\n                    </div>\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button type=\"submit\"\r\n                        ng-disabled=\"form.configureEntityForm.$invalid || !form.configureEntityForm.$dirty\"\r\n                        class=\"md-raised md-primary\">Configurar\r\n                    </md-button>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-primary\">Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n        </md-tab>\r\n        \r\n        <md-tab label=\"Tomar Posesion\" ng-if=\"vm.entityType.toLowerCase()=='device' && vm.attributes.hasOwnProperty('apropiable') && vm.attributes.apropiable==true && vm.attributes.hasOwnProperty('apropiado') && vm.attributes.apropiado==false\">\r\n            <form name=\"form.hijackForm\"\r\n                ng-submit=\"vm.hijack()\"\r\n                >\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Tomar posesión del dispositivo\r\n                            {{vm.attributes.nombreEntidad}}\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\">\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex \r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Método de activación</label>\r\n                                <md-select\r\n                                    ng-model=\"vm.hijack.metodoActivacion\">\r\n                                    <md-option ng-if=\"vm.attributes.hasOwnProperty('admiteABP') && vm.attributes.admiteABP==true\"\r\n                                        value=\"A\"\r\n                                        ng-selected=\"\">\r\n                                        ABP\r\n                                    </md-option>\r\n                                    <md-option\r\n                                        value=\"O\"\r\n                                        ng-selected=\"true\">\r\n                                        OTAA\r\n                                    </md-option>\r\n                                </md-select>\r\n                            </md-input-container>\r\n                        </div>\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex ng-if=\"vm.hijack.metodoActivacion=='A'\"\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Device Address (msb)</label>\r\n                                <input type=\"text\" pattern=\"[0-9a-fA-F]{8}\" autocomplete=\"off\"\r\n                                    ng-model=\"vm.hijack.param1\"\r\n                                    required>\r\n                            </md-input-container>\r\n                        </div>\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex ng-if=\"vm.hijack.metodoActivacion=='A'\"\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Network Session Key (msb)</label>\r\n                                <input type=\"text\" pattern=\"[0-9a-fA-F]{32}\" autocomplete=\"off\"\r\n                                    ng-model=\"vm.hijack.param2\"\r\n                                    required>\r\n                            </md-input-container>\r\n                        </div>\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex ng-if=\"vm.hijack.metodoActivacion=='A'\"\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Application Session Key (msb)</label>\r\n                                <input type=\"text\" pattern=\"[0-9a-fA-F]{32}\" autocomplete=\"off\"\r\n                                    ng-model=\"vm.hijack.param3\"\r\n                                    required>\r\n                            </md-input-container>\r\n                        </div>\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex ng-if=\"vm.hijack.metodoActivacion=='O'\"\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Device EUI (msb)</label>\r\n                                <input type=\"text\" pattern=\"[0-9a-fA-F]{16}\" autocomplete=\"off\"\r\n                                    ng-model=\"vm.hijack.param1\"\r\n                                    required>\r\n                            </md-input-container>\r\n                        </div>\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex ng-if=\"vm.hijack.metodoActivacion=='O'\"\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Application EUI (msb)</label>\r\n                                <input type=\"text\" pattern=\"[0-9a-fA-F]{16}\" autocomplete=\"off\"\r\n                                    ng-model=\"vm.hijack.param2\"\r\n                                    required>\r\n                            </md-input-container>\r\n                        </div>\r\n                        <div layout=\"row\">\r\n                            <md-input-container flex ng-if=\"vm.hijack.metodoActivacion=='O'\"\r\n                                class=\"md-block\"\r\n                                style=\"min-width: 100px; width: 150px;\">\r\n                                <label>Application Key (msb)</label>\r\n                                <input type=\"text\" pattern=\"[0-9a-fA-F]{32}\" autocomplete=\"off\"\r\n                                    ng-model=\"vm.hijack.param3\"\r\n                                    required>\r\n                            </md-input-container>\r\n                        </div>\r\n                    </div>\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button type=\"submit\"\r\n                        ng-disabled=\"form.hijackForm.$invalid || !form.hijackForm.$dirty\"\r\n                        class=\"md-raised md-primary\">Tomar posesión\r\n                    </md-button>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-primary\">Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n        </md-tab>\r\n\r\n        <md-tab label=\"borrar\">\r\n            <form name=\"form.deleteEntityFormNull\"\r\n                ng-if=\"vm.entity.type=='ROOT' || vm.borrable==false\">\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Borrar\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\">No se\r\n                        puede borrar el activo ROOT ni los\r\n                        activos que tengan hijos.</div>\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-primary\">Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n            <form name=\"form.deleteEntityForm\"\r\n                class=\"delete-entity-form\"\r\n                ng-submit=\"vm.borrar()\"\r\n                ng-if=\"vm.entity.type!='ROOT' && vm.borrable==true\">\r\n                <md-toolbar>\r\n                    <div class=\"md-toolbar-tools\">\r\n                        <h2>Borrar\r\n                            {{vm.attributes.nombreEntidad}}\r\n                        </h2>\r\n                        <span flex></span>\r\n                        <md-button class=\"md-icon-button\"\r\n                            ng-click=\"vm.cancel()\">\r\n                            <ng-md-icon icon=\"close\"\r\n                                aria-label=\"Close\">\r\n                            </ng-md-icon>\r\n                        </md-button>\r\n                    </div>\r\n                </md-toolbar>\r\n                <md-dialog-content>\r\n                    <div class=\"md-dialog-content\">\r\n                        Esta operación no es reversible.\r\n                    </div>\r\n                </md-dialog-content>\r\n                <md-dialog-actions>\r\n                    <md-button type=\"submit\"\r\n                        class=\"md-primary\">Borrar\r\n                    </md-button>\r\n                    <md-button ng-click=\"vm.cancel()\"\r\n                        class=\"md-raised md-primary\">\r\n                        Cancelar\r\n                    </md-button>\r\n                </md-dialog-actions>\r\n            </form>\r\n        </md-tab>\r\n    </md-tabs>\r\n</md-dialog>\r\n\r\n<!--=======================================================================-->\r\n<!--=====  There are two example templates: for edit and add entity   =====-->\r\n<!--=======================================================================-->\r\n<!--========================  Edit entity example  ========================-->\r\n<!--=======================================================================-->\r\n<!-- -->\r\n<!--<md-dialog aria-label=\"Edit entity\">-->\r\n<!--    <form name=\"editEntityForm\" class=\"edit-entity-form\" ng-submit=\"vm.save()\">-->\r\n<!--        <md-toolbar>-->\r\n<!--            <div class=\"md-toolbar-tools\">-->\r\n<!--                <h2>Edit {{vm.entityType.toLowerCase()}} {{vm.entityName}}</h2>-->\r\n<!--                <span flex></span>-->\r\n<!--                <md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\">-->\r\n<!--                    <ng-md-icon icon=\"close\" aria-label=\"Close\"></ng-md-icon>-->\r\n<!--                </md-button>-->\r\n<!--            </div>-->\r\n<!--        </md-toolbar>-->\r\n<!--        <md-dialog-content>-->\r\n<!--            <div class=\"md-dialog-content\">-->\r\n<!--                <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Entity Name</label>-->\r\n<!--                        <input ng-model=\"vm.entityName\" readonly>-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Entity Type</label>-->\r\n<!--                        <input ng-model=\"vm.entityType\" readonly>-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Type</label>-->\r\n<!--                        <input ng-model=\"vm.type\" readonly>-->\r\n<!--                    </md-input-container>-->\r\n<!--                </div>-->\r\n<!--                <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Latitude</label>-->\r\n<!--                        <input name=\"latitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.latitude\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Longitude</label>-->\r\n<!--                        <input name=\"longitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.longitude\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                </div>-->\r\n<!--                 <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Address</label>-->\r\n<!--                        <input ng-model=\"vm.attributes.address\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Owner</label>-->\r\n<!--                        <input ng-model=\"vm.attributes.owner\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                </div>-->\r\n<!--                <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Integer Value</label>-->\r\n<!--                        <input name=\"integerNumber\" type=\"number\" step=\"1\" ng-pattern=\"/^-?[0-9]+$/\" ng-model=\"vm.attributes.number\">-->\r\n<!--                        <div ng-messages=\"editEntityForm.integerNumber.$error\">-->\r\n<!--                            <div ng-message=\"pattern\">Invalid integer value.</div>-->\r\n<!--                        </div>-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <div class=\"boolean-value-input\" layout=\"column\" layout-align=\"center start\" flex>-->\r\n<!--                        <label class=\"checkbox-label\">Boolean Value</label>-->\r\n<!--                        <md-checkbox ng-model=\"vm.attributes.booleanValue\" style=\"margin-bottom: 40px;\">-->\r\n<!--                            {{ (vm.attributes.booleanValue ? \"value.true\" : \"value.false\") | translate }}-->\r\n<!--                        </md-checkbox>-->\r\n<!--                    </div>-->\r\n<!--                </div>-->\r\n<!--                <div class=\"relations-list old-relations\">-->\r\n<!--                    <div class=\"md-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">Relations</div>-->\r\n<!--                    <div class=\"body\" ng-show=\"vm.relations.length\">-->\r\n<!--                        <div class=\"row\" layout=\"row\" layout-align=\"start center\" ng-repeat=\"relation in vm.relations track by $index\">-->\r\n<!--                            <div class=\"md-whiteframe-1dp\" flex layout=\"row\" style=\"padding-left: 5px; margin-bottom: 3px;\">-->\r\n<!--                                <div flex layout=\"column\">-->\r\n<!--                                    <div layout=\"row\">-->\r\n<!--                                        <md-input-container class=\"md-block\" style=\"min-width: 100px;\">-->\r\n<!--                                            <label>Direction</label>-->\r\n<!--                                            <md-select ng-disabled=\"true\" required ng-model=\"relation.direction\">-->\r\n<!--                                                <md-option ng-repeat=\"direction in vm.entitySearchDirection\" ng-value=\"direction\">-->\r\n<!--                                                    {{ (\"relation.search-direction.\" + direction) | translate}}-->\r\n<!--                                                </md-option>-->\r\n<!--                                            </md-select>-->\r\n<!--                                        </md-input-container>-->\r\n<!--                                        <tb-relation-type-autocomplete ng-disabled=\"true\" flex class=\"md-block\"-->\r\n<!--                                           the-form=\"editEntityForm\"-->\r\n<!--                                           ng-model=\"relation.relationType\"-->\r\n<!--                                           tb-required=\"true\">-->\r\n<!--                                        </tb-relation-type-autocomplete>-->\r\n<!--                                    </div>-->\r\n<!--                                    <div layout=\"row\">-->\r\n<!--                                        <tb-entity-select flex class=\"md-block\"-->\r\n<!--                                            the-form=\"editEntityForm\"-->\r\n<!--                                            ng-disabled=\"true\"-->\r\n<!--                                            tb-required=\"true\"-->\r\n<!--                                            ng-model=\"relation.relatedEntity\">-->\r\n<!--                                        </tb-entity-select>-->\r\n<!--                                    </div>-->\r\n<!--                                </div>-->\r\n<!--                                <div layout=\"column\" layout-align=\"center center\">-->\r\n<!--                                    <md-button class=\"md-icon-button md-primary\" style=\"width: 40px; min-width: 40px;\"-->\r\n<!--                                               ng-click=\"vm.removeOldRelation($index,relation)\" aria-label=\"Remove\">-->\r\n<!--                                        <md-tooltip md-direction=\"top\">Remove relation</md-tooltip>-->\r\n<!--                                        <md-icon aria-label=\"Remove\" class=\"material-icons\">-->\r\n<!--                                            close-->\r\n<!--                                        </md-icon>-->\r\n<!--                                    </md-button>-->\r\n<!--                                </div>-->\r\n<!--                            </div>-->\r\n<!--                        </div>-->\r\n<!--                    </div>-->\r\n<!--                </div>-->\r\n<!--                <div class=\"relations-list\">-->\r\n<!--                    <div class=\"md-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">New Relations</div>-->\r\n<!--                    <div class=\"body\" ng-show=\"vm.newRelations.length\">-->\r\n<!--                        <div class=\"row\" layout=\"row\" layout-align=\"start center\" ng-repeat=\"relation in vm.newRelations track by $index\">-->\r\n<!--                            <div class=\"md-whiteframe-1dp\" flex layout=\"row\" style=\"padding-left: 5px; margin-bottom: 3px;\">-->\r\n<!--                                <div flex layout=\"column\">-->\r\n<!--                                    <div layout=\"row\">-->\r\n<!--                                        <md-input-container class=\"md-block\" style=\"min-width: 100px;\">-->\r\n<!--                                            <label>Direction</label>-->\r\n<!--                                            <md-select name=\"direction\" required ng-model=\"relation.direction\">-->\r\n<!--                                                <md-option ng-repeat=\"direction in vm.entitySearchDirection\" ng-value=\"direction\">-->\r\n<!--                                                    {{ (\"relation.search-direction.\" + direction) | translate}}-->\r\n<!--                                                </md-option>-->\r\n<!--                                            </md-select>-->\r\n<!--                                            <div ng-messages=\"editEntityForm.direction.$error\">-->\r\n<!--                                                <div ng-message=\"required\">Relation direction is required.</div>-->\r\n<!--                                            </div>-->\r\n<!--                                        </md-input-container>-->\r\n<!--                                        <tb-relation-type-autocomplete flex class=\"md-block\"-->\r\n<!--                                           the-form=\"editEntityForm\"-->\r\n<!--                                           ng-model=\"relation.relationType\"-->\r\n<!--                                           tb-required=\"true\">-->\r\n<!--                                        </tb-relation-type-autocomplete>-->\r\n<!--                                    </div>-->\r\n<!--                                    <div layout=\"row\">-->\r\n<!--                                        <tb-entity-select flex class=\"md-block\"-->\r\n<!--                                            the-form=\"editEntityForm\"-->\r\n<!--                                            tb-required=\"true\"-->\r\n<!--                                            ng-model=\"relation.relatedEntity\">-->\r\n<!--                                        </tb-entity-select>-->\r\n<!--                                    </div>-->\r\n<!--                                </div>-->\r\n<!--                                <div layout=\"column\" layout-align=\"center center\">-->\r\n<!--                                    <md-button class=\"md-icon-button md-primary\" style=\"width: 40px; min-width: 40px;\"-->\r\n<!--                                               ng-click=\"vm.removeRelation($index)\" aria-label=\"Remove\">-->\r\n<!--                                        <md-tooltip md-direction=\"top\">Remove relation</md-tooltip>-->\r\n<!--                                        <md-icon aria-label=\"Remove\" class=\"material-icons\">-->\r\n<!--                                            close-->\r\n<!--                                        </md-icon>-->\r\n<!--                                    </md-button>-->\r\n<!--                                </div>-->\r\n<!--                            </div>-->\r\n<!--                        </div>-->\r\n<!--                    </div>-->\r\n<!--                   <div>-->\r\n<!--                       <md-button class=\"md-primary md-raised\" ng-click=\"vm.addRelation()\" aria-label=\"Add\">-->\r\n<!--                           <md-tooltip md-direction=\"top\">Add Relation</md-tooltip>-->\r\n<!--                           Add-->\r\n<!--                       </md-button>-->\r\n<!--                   </div> -->\r\n<!--                </div>-->\r\n<!--            </div>-->\r\n<!--        </md-dialog-content>-->\r\n<!--        <md-dialog-actions>-->\r\n<!--            <md-button type=\"submit\" ng-disabled=\"editEntityForm.$invalid || !editEntityForm.$dirty\" class=\"md-raised md-primary\">Save</md-button>-->\r\n<!--            <md-button ng-click=\"vm.cancel()\" class=\"md-primary\">Cancel</md-button>-->\r\n<!--        </md-dialog-actions>-->\r\n<!--    </form>-->\r\n<!--</md-dialog>-->\r\n<!---->\r\n<!--========================================================================-->\r\n<!--=========================  Add entity example  =========================-->\r\n<!--========================================================================-->\r\n<!---->\r\n<!--<md-dialog aria-label=\"Add entity\">-->\r\n<!--    <form name=\"addEntityForm\" class=\"add-entity-form\" ng-submit=\"vm.save()\">-->\r\n<!--        <md-toolbar>-->\r\n<!--            <div class=\"md-toolbar-tools\">-->\r\n<!--                <h2>Add entity</h2>-->\r\n<!--                <span flex></span>-->\r\n<!--                <md-button class=\"md-icon-button\" ng-click=\"vm.cancel()\">-->\r\n<!--                    <ng-md-icon icon=\"close\" aria-label=\"Close\"></ng-md-icon>-->\r\n<!--                </md-button>-->\r\n<!--            </div>-->\r\n<!--        </md-toolbar>-->\r\n<!--        <md-dialog-content>-->\r\n<!--            <div class=\"md-dialog-content\">-->\r\n<!--                <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Entity Name</label>-->\r\n<!--                        <input ng-model=\"vm.entityName\" name=entityName required>-->\r\n<!--                        <div ng-messages=\"addEntityForm.entityName.$error\">-->\r\n<!--                            <div ng-message=\"required\">Entity name is required.</div>-->\r\n<!--                        </div>-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <tb-entity-type-select class=\"md-block\" style=\"min-width: 100px; width: 100px;\"-->\r\n<!--                       the-form=\"addEntityForm\"-->\r\n<!--                       tb-required=\"true\"-->\r\n<!--                       allowed-entity-types=\"vm.allowedEntityTypes\"-->\r\n<!--                       ng-model=\"vm.entityType\">-->\r\n<!--                    </tb-entity-type-select>-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Entity Subtype</label>-->\r\n<!--                        <input ng-model=\"vm.type\" name=type required>-->\r\n<!--                        <div ng-messages=\"addEntityForm.type.$error\">-->\r\n<!--                            <div ng-message=\"required\">Entity subtype is required.</div>-->\r\n<!--                        </div>-->\r\n<!--                    </md-input-container>-->\r\n<!--                </div>-->\r\n<!--                <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Latitude</label>-->\r\n<!--                        <input name=\"latitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.latitude\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Longitude</label>-->\r\n<!--                        <input name=\"longitude\" type=\"number\" step=\"any\" ng-model=\"vm.attributes.longitude\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                </div>-->\r\n<!--                 <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Address</label>-->\r\n<!--                        <input ng-model=\"vm.attributes.address\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Owner</label>-->\r\n<!--                        <input ng-model=\"vm.attributes.owner\">-->\r\n<!--                    </md-input-container>-->\r\n<!--                </div>-->\r\n<!--                <div layout=\"row\">-->\r\n<!--                    <md-input-container flex class=\"md-block\">-->\r\n<!--                        <label>Integer Value</label>-->\r\n<!--                        <input name=\"integerNumber\" type=\"number\" step=\"1\" ng-pattern=\"/^-?[0-9]+$/\" ng-model=\"vm.attributes.number\">-->\r\n<!--                        <div ng-messages=\"addEntityForm.integerNumber.$error\">-->\r\n<!--                            <div ng-message=\"pattern\">Invalid integer value.</div>-->\r\n<!--                        </div>-->\r\n<!--                    </md-input-container>-->\r\n<!--                    <div class=\"boolean-value-input\" layout=\"column\" layout-align=\"center start\" flex>-->\r\n<!--                        <label class=\"checkbox-label\">Boolean Value</label>-->\r\n<!--                        <md-checkbox ng-model=\"vm.attributes.booleanValue\" style=\"margin-bottom: 40px;\">-->\r\n<!--                            {{ (vm.attributes.booleanValue ? \"value.true\" : \"value.false\") | translate }}-->\r\n<!--                        </md-checkbox>-->\r\n<!--                    </div>-->\r\n<!--                </div>-->\r\n<!--                <div class=\"relations-list\">-->\r\n<!--                    <div class=\"md-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">Relations</div>-->\r\n<!--                    <div class=\"body\" ng-show=\"vm.relations.length\">-->\r\n<!--                        <div class=\"row\" layout=\"row\" layout-align=\"start center\" ng-repeat=\"relation in vm.relations track by $index\">-->\r\n<!--                            <div class=\"md-whiteframe-1dp\" flex layout=\"row\" style=\"padding-left: 5px;\">-->\r\n<!--                                <div flex layout=\"column\">-->\r\n<!--                                    <div layout=\"row\">-->\r\n<!--                                        <md-input-container class=\"md-block\" style=\"min-width: 100px;\">-->\r\n<!--                                            <label>Direction</label>-->\r\n<!--                                            <md-select name=\"direction\" required ng-model=\"relation.direction\">-->\r\n<!--                                                <md-option ng-repeat=\"direction in vm.entitySearchDirection\" ng-value=\"direction\">-->\r\n<!--                                                    {{ (\"relation.search-direction.\" + direction) | translate}}-->\r\n<!--                                                </md-option>-->\r\n<!--                                            </md-select>-->\r\n<!--                                            <div ng-messages=\"addEntityForm.direction.$error\">-->\r\n<!--                                                <div ng-message=\"required\">Relation direction is required.</div>-->\r\n<!--                                            </div>-->\r\n<!--                                        </md-input-container>-->\r\n<!--                                        <tb-relation-type-autocomplete flex class=\"md-block\"-->\r\n<!--                                           the-form=\"addEntityForm\"-->\r\n<!--                                           ng-model=\"relation.relationType\"-->\r\n<!--                                           tb-required=\"true\">-->\r\n<!--                                        </tb-relation-type-autocomplete>-->\r\n<!--                                    </div>-->\r\n<!--                                    <div layout=\"row\">-->\r\n<!--                                        <tb-entity-select flex class=\"md-block\"-->\r\n<!--                                            the-form=\"addEntityForm\"-->\r\n<!--                                            tb-required=\"true\"-->\r\n<!--                                            ng-model=\"relation.relatedEntity\">-->\r\n<!--                                        </tb-entity-select>-->\r\n<!--                                    </div>-->\r\n<!--                                </div>-->\r\n<!--                                <div layout=\"column\" layout-align=\"center center\">-->\r\n<!--                                    <md-button class=\"md-icon-button md-primary\" style=\"width: 40px; min-width: 40px;\"-->\r\n<!--                                               ng-click=\"vm.removeRelation($index)\" aria-label=\"Remove\">-->\r\n<!--                                        <md-tooltip md-direction=\"top\">Remove relation</md-tooltip>-->\r\n<!--                                        <md-icon aria-label=\"Remove\" class=\"material-icons\">-->\r\n<!--                                            close-->\r\n<!--                                        </md-icon>-->\r\n<!--                                    </md-button>-->\r\n<!--                                </div>-->\r\n<!--                            </div>-->\r\n<!--                        </div>-->\r\n<!--                    </div>-->\r\n<!--                   <div>-->\r\n<!--                       <md-button class=\"md-primary md-raised\" ng-click=\"vm.addRelation()\" aria-label=\"Add\">-->\r\n<!--                           <md-tooltip md-direction=\"top\">Add Relation</md-tooltip>-->\r\n<!--                           Add-->\r\n<!--                       </md-button>-->\r\n<!--                   </div> -->\r\n<!--                </div>-->\r\n<!--            </div>-->\r\n<!--        </md-dialog-content>-->\r\n<!--        <md-dialog-actions>-->\r\n<!--            <md-button type=\"submit\" ng-disabled=\"addEntityForm.$invalid || !addEntityForm.$dirty\" class=\"md-raised md-primary\">Create</md-button>-->\r\n<!--            <md-button ng-click=\"vm.cancel()\" class=\"md-primary\">Cancel</md-button>-->\r\n<!--        </md-dialog-actions>-->\r\n<!--    </form>-->\r\n<!--</md-dialog>-->",
                "customCss": "/*=======================================================================*/\n/*==========  There are two examples: for edit and add entity  ==========*/\n/*=======================================================================*/\n/*========================  Edit entity example  ========================*/\n/*=======================================================================*/\n/*\n.edit-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.edit-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.edit-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n\n.relations-list.old-relations tb-entity-select tb-entity-autocomplete button {\n    display: none;\n} \n*/\n/*========================================================================*/\n/*=========================  Add entity example  =========================*/\n/*========================================================================*/\n/*\n.add-entity-form md-input-container {\n    padding-right: 10px;\n}\n\n.add-entity-form .boolean-value-input {\n    padding-left: 5px;\n}\n\n.add-entity-form .boolean-value-input .checkbox-label {\n    margin-bottom: 8px;\n    color: rgba(0,0,0,0.54);\n    font-size: 12px;\n}\n\n.relations-list .header {\n    padding-right: 5px;\n    padding-bottom: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .header .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgba(0, 0, 0, .54);\n    white-space: nowrap;\n}\n\n.relations-list .body {\n    padding-right: 5px;\n    padding-bottom: 15px;\n    padding-left: 5px;\n}\n\n.relations-list .body .row {\n    padding-top: 5px;\n}\n\n.relations-list .body .cell {\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.relations-list .body md-autocomplete-wrap md-input-container {\n    height: 30px;\n}\n\n.relations-list .body .md-button {\n    margin: 0;\n}\n*/\n",
                "customFunction": "var $injector = widgetContext.$scope.$injector;\nvar $mdDialog = $injector.get('$mdDialog'),\n    $document = $injector.get('$document'),\n    $location = $injector.get('$location'),\n    $q = $injector.get('$q'),\n    types = $injector.get('types'),\n    $rootScope = $injector.get('$rootScope'),\n    entityService = $injector.get('entityService'),\n    attributeService = $injector.get('attributeService'),\n    assetService = $injector.get('assetService'),\n    userService = $injector.get('userService'),\n    deviceService = $injector.get('deviceService'),\n    servicioHTTP = $injector.get(\n        '$http'),\n    entityRelationService = $injector.get(\n        'entityRelationService');\n\n//Obtengo el código de configuración del tipo de nodo\nvar notificaciones =\n    '<md-card> Notificaciones <md-card ng-if=\"vm.viasNotificacion.email\"> <label class=\"checkbox-label\">email</label> <md-checkbox ng-disabled=\"!vm.configuracion.__alarmas.cambioDeEstado.enable || !vm.viasNotificacion.email\" ng-model=\"vm.configuracion.__alarmas.cambioDeEstado.email\" style=\"margin-bottom: 10px;\"> {{ (vm.configuracion.__alarmas.cambioDeEstado.email ? \"value.true\" : \"value.false\") | translate }} </md-checkbox> <md-card> <label class=\"checkbox-label\">Enviar al email principal</label> <md-checkbox ng-disabled=\"!vm.configuracion.__alarmas.cambioDeEstado.enable || !vm.viasNotificacion.email\" ng-model=\"vm.configuracion.__alarmas.cambioDeEstado.emailPrincipal\" style=\"margin-bottom: 10px;\"> {{ (vm.configuracion.__alarmas.cambioDeEstado.emailPrincipal ? \"value.true\" : \"value.false\") | translate }} </md-checkbox> <label>Enviar a emails adicionales</label> <md-chips ng-model=\"vm.configuracion.__alarmas.cambioDeEstado.emailsAdicionales\" placeholder=\"Máximo 3 emails\" md-removable=\"vm.configuracion.__alarmas.cambioDeEstado.enable && vm.viasNotificacion.email && vm.configuracion.__alarmas.cambioDeEstado.email\" md-enable-chip-edit=\"vm.configuracion.__alarmas.cambioDeEstado.enable && vm.viasNotificacion.email && vm.configuracion.__alarmas.cambioDeEstado.email\" md-max-chips=\"3\" readonly=\"!vm.configuracion.__alarmas.cambioDeEstado.enable || !vm.viasNotificacion.email || !vm.configuracion.__alarmas.cambioDeEstado.email\" ></md-chips> </md-card> </md-card> <md-card> <label class=\"checkbox-label\">Telegram</label> <md-checkbox ng-disabled=\"!vm.configuracion.__alarmas.cambioDeEstado.enable || !vm.viasNotificacion.telegram\" ng-model=\"vm.configuracion.__alarmas.cambioDeEstado.telegram\" style=\"margin-bottom: 10px;\"> {{ (vm.configuracion.__alarmas.cambioDeEstado.telegram ? \"value.true\" : \"value.false\") | translate }} </md-checkbox> </md-card> <md-card> <div flex layout=\"column\"> <label class=\"checkbox-label\">IFTTT</label> <md-checkbox ng-disabled=\"!vm.configuracion.__alarmas.cambioDeEstado.enable || !vm.viasNotificacion.ifttt\" ng-model=\"vm.configuracion.__alarmas.cambioDeEstado.ifttt\" style=\"margin-bottom: 10px;\"> {{ (vm.configuracion.__alarmas.cambioDeEstado.ifttt ? \"value.true\" : \"value.false\") | translate }} </md-checkbox> </div> <md-input-container flex class=\"md-block\"> <label>Evento IFTTT</label> <input size=\"40\" ng-disabled=\"!vm.configuracion.__alarmas.cambioDeEstado.enable || !vm.configuracion.__alarmas.cambioDeEstado.ifttt\" ng-model=\"vm.configuracion.__alarmas.cambioDeEstado.iftttEvento\" ng-required=\"vm.configuracion.__alarmas.cambioDeEstado.enable && vm.configuracion.__alarmas.cambioDeEstado.ifttt\" /> </md-input-container> </md-card> <!--Final notificaciones--></md-card>';\nvar chirpstack =\n    '<div class=\"body\"> <div class=\"row\" layout=\"row\" layout-align=\"start center\"> <div class=\"md-whiteframe-1dp\" flex layout=\"column\" style=\"padding-left: 5px; margin-bottom: 3px;\"> <div class=\"md-body-1\" style=\"padding-bottom: 10px; color: rgba(0,0,0,0.57);\">ChirpStack</div><div class=\"row\" layout=\"column\"> <md-input-container flex class=\"md-block\"> <label>URL de ChirpStack</label> <input type=\"text\" size=\"30\" ng-model=\"vm.configuracion.__cs_url\" placeholder=\"https://my.iotopentech.io:8080\"/> </md-input-container><md-input-container flex class=\"md-block\"> <label>JWT ChirpStack</label> <input type=\"password\" size=\"30\" ng-model=\"vm.configuracion.__cs_token\" /> </md-input-container> </div> </div> </div></div>';\nvar subtipo = \"\";\nvar configurable = false;\nvar htmlTemplate2 = htmlTemplate;\nvar emailsAdicionales = [];\n/*\nif (entityId.entityType != types\n    .entityType.device) {\n    openEditEntityDialog();\n} else {\n*/\nentityService.getEntity(entityId.entityType,\n    entityId.id).then(\n    function(entity) {\n        subtipo = entity.type;\n        //console.log(subtipo);\n        attributeService.getEntityAttributesValues(\n            'CUSTOMER', userService\n            .getCurrentUser()\n            .customerId,\n            'SERVER_SCOPE').then(\n            function(data) {\n                if (data.length) {\n                    getConfiguracion(\n                        data);\n                }\n            });\n\n\n    });\n\n//getConfiguracion();\n//}\n\n//openEditEntityDialog();\n\nfunction getConfiguracion(attributes) {\n    for (var i = 0; i < attributes.length; i++) {\n        if (attributes[i].key ==\n            subtipo + \"_config\") {\n            configurable = true;\n            var copia = attributes[i].value;\n            var res = copia.split(\n                '<sustituir-notificaciones class=\"ng-scope\">'\n            );\n            //console.log(res);\n            for (var j = 1; j < res.length; j++) {\n                var res2 = res[j].split(\n                    '</sustituir-notificaciones>');\n                res2 = res2[0];\n                emailsAdicionales.push(res2);\n                //console.log(res2);\n                copia = copia.replace(\n                    '<sustituir-notificaciones class=\"ng-scope\">' +\n                    res2 +\n                    '</sustituir-notificaciones>',\n                    notificaciones.replace(\n                        /cambioDeEstado/g, res2));\n                //El modificador /g de replace sustituye todas las ocurrencias\n            }\n            //Tengo que anteponer el bloque general de integración con ChirpStack\n            //Pero sólo en los dispositivos de los tipos LoRaWAN\n            var subtiposLorawan = [\"RAK7200\", \"V02_001\",\n                \"RAK7204\"\n            ];\n            if (subtiposLorawan.indexOf(subtipo) >= 0) {\n                copia = chirpstack + copia;\n            }\n            htmlTemplate2 = htmlTemplate2.replace(\n                '<sustituir class=\"ng-scope\"></sustituir>',\n                copia);\n\n        }\n\n    }\n\n    openEditEntityDialog();\n}\n\n\nfunction openEditEntityDialog() {\n    $mdDialog.show({\n        controller: ['$scope', '$mdDialog',\n            EditEntityDialogController\n        ],\n        controllerAs: 'vm',\n        template: htmlTemplate2,\n        locals: {\n            entityId: entityId\n        },\n        parent: angular.element($document[0].body),\n        targetEvent: $event,\n        multiple: true,\n        clickOutsideToClose: false\n    });\n}\n\n\n\nfunction EditEntityDialogController($scope, $mdDialog) {\n    $scope.form = {};\n    $scope.chip = \"$scope\";\n    var vm = this;\n    vm.entityId = entityId;\n    vm.entityName = entityName;\n    vm.entityType = entityId.entityType;\n    vm.allowedEntityTypes = [types.entityType.asset, types\n        .entityType.device\n    ];\n    vm.allowedRelatedEntityTypes = [];\n    vm.entitySearchDirection = types.entitySearchDirection;\n    vm.tiposDeDispositivos = {};\n    vm.tiposDeActivos = {};\n    vm.activos = {};\n    vm.padre = {};\n    vm.attributes = {};\n    vm.configuracion = {};\n    vm.configuracion.__alarmas = {};\n    for (var j = 0; j < emailsAdicionales.length; j++) {\n        vm.configuracion.__alarmas[emailsAdicionales[\n            j]] = {};\n        vm.configuracion.__alarmas[emailsAdicionales[j]]\n            .emailsAdicionales = [];\n        //console.log(emailsAdicionales[j]);\n    }\n    vm.viasNotificacion = {};\n\n    vm.serverAttributes = {};\n    vm.relations = [];\n    vm.newRelations = [];\n    vm.relationsToDelete = [];\n    vm.borrable = false;\n    vm.HTMLconfig = \"\";\n    vm.subtipo = subtipo;\n    vm.configurable = configurable;\n\n\n    getEntityInfo();\n\n    vm.addRelation = function() {\n        var relation = {\n            direction: null,\n            relationType: null,\n            relatedEntity: null\n        };\n        vm.newRelations.push(relation);\n        $scope.editEntityForm.$setDirty();\n    };\n    vm.removeRelation = function(index) {\n        if (index > -1) {\n            vm.newRelations.splice(index, 1);\n            $scope.editEntityForm.$setDirty();\n        }\n    };\n    vm.removeOldRelation = function(index, relation) {\n        if (index > -1) {\n            vm.relations.splice(index, 1);\n            vm.relationsToDelete.push(relation);\n            $scope.editEntityForm.$setDirty();\n        }\n    };\n    vm.borrar = function() {\n        openDeleteEntityDialog();\n\n        function openDeleteEntityDialog() {\n            $scope.form.deleteEntityForm\n                .$setPristine();\n            var title = 'Borrar ' +\n                entityName;\n            var content =\n                '¿Seguro que desea borrar la entidad ' +\n                entityName + '?';\n            var confirm = $mdDialog.confirm()\n                .targetEvent($event)\n                .title(title)\n                .htmlContent(content)\n                .ariaLabel(title)\n                .cancel('Cancelar')\n                .ok('Borrar');\n            $mdDialog.show(confirm).then(function() {\n                deleteEntity();\n            });\n        }\n\n        function deleteEntity() {\n            servicioHTTP({\n                method: 'POST',\n                url: $location.protocol() +\n                    '://' +\n                    $location.host() + ':' +\n                    $location.port() +\n                    '/api/v1/' + vm\n                    .tokenControl +\n                    '/telemetry',\n                data: \"{'accion':'borrarEntidad','nombreEntidad':'_\" +\n                    vm\n                    .attributes.nombreEntidad +\n                    \"','idEntidad':'\" +\n                    vm.entityId.id +\n                    \"','tipoEntidad':'\" + vm\n                    .entityType +\n                    \"'}\"\n            }).\n            success(function(data, status, headers,\n                config) {\n                //Con el sistema de queues es más lento\n                //Habría que obtener de algún modo una confirmación del borrado\n                //o simplemente una pausa\n                setTimeout(updateAliasData,\n                    2000);\n                console.log('worked');\n                //updateAliasData();\n                $mdDialog.hide();\n                // ...\n            }).\n            error(function(data, status, headers,\n                config) {\n                console.log('notworked');\n                // ...\n            });\n        }\n    };\n    vm.crear = function() {\n        //console.log( vm.crearEntidad.nombreEntidad);\n        //TODO: Gestionar colisión de nombres\n        servicioHTTP({\n            method: 'POST',\n            url: $location.protocol() + '://' +\n                $location.host() + ':' +\n                $location.port() +\n                '/api/v1/' + vm.tokenControl +\n                '/telemetry',\n            data: \"{'accion':'crearEntidad','nombreEntidad':'_\" +\n                vm.crearEntidad.nombreEntidad +\n                \"','tipoEntidad':'\" + vm\n                .crearEntidad.tipoEntidad +\n                \"','subtipoEntidad':'\" + vm\n                .crearEntidad.subtipoEntidad +\n                \"','padreEntidadId':'\" + vm\n                .entityId.id +\n                \"','padreEntidadNombre':'\" + vm\n                .entityName + \"'}\"\n        }).\n        success(function(data, status, headers,\n            config) {\n            console.log('worked');\n            setTimeout(updateAliasData,\n                2000);\n            //updateAliasData();\n            $scope.form.addEntityForm\n                .$setPristine();\n            $mdDialog.hide();\n            // ...\n        }).\n        error(function(data, status, headers,\n            config) {\n            console.log('notworked');\n            // ...\n        });\n    };\n\n\n\n\n    vm.hijack = function() {\n        //Como la carga de pago máxima de lorawan con cierta garantía es 51\n        //voy a dividir las credenciales en 3 paquetes\n        var payload = {};\n        payload.port =\n            99; //Cayenne mydevices manda los downlink por el port 99\n        payload.confirmed = true;\n        payload.schedule = \"last\";\n        payload.payload_raw =\n            \"FF01\"; //Los downlink de toma de posesion van a empezar con FF\n        payload.payload_raw += vm.hijack\n            .metodoActivacion;\n        payload.payload_raw += vm.hijack.param1\n            .toUpperCase();\n\n        payload.payload_raw = btoa(payload\n            .payload_raw);\n        servicioHTTP({\n            method: 'POST',\n            url: $location.protocol() + '://' +\n                $location.host() + ':' +\n                $location.port() +\n                '/api/v1/' + vm.tokenControl +\n                '/telemetry',\n            data: \"{'accion':'tomarPosesion','uuid':'\" +\n                vm.entityId.id +\n                \"','payload':'\" +\n                JSON.stringify(payload) +\n                \"'}\"\n        }).\n        success(function(data, status, headers,\n            config) {\n            payload.payload_raw =\n                \"FF02\"; //Los downlink de toma de posesion van a empezar con FF\n            payload.payload_raw += vm.hijack\n                .metodoActivacion;\n            payload.payload_raw += vm.hijack\n                .param2.toUpperCase();\n            payload.payload_raw = btoa(payload\n                .payload_raw);\n            servicioHTTP({\n                method: 'POST',\n                url: $location\n                    .protocol() +\n                    '://' +\n                    $location.host() +\n                    ':' + $location\n                    .port() +\n                    '/api/v1/' + vm\n                    .tokenControl +\n                    '/telemetry',\n                data: \"{'accion':'tomarPosesion','uuid':'\" +\n                    vm.entityId.id +\n                    \"','payload':'\" +\n                    JSON.stringify(\n                        payload) +\n                    \"'}\"\n            }).\n            success(function(data, status,\n                headers,\n                config) {\n                payload.payload_raw =\n                    \"FF03\"; //Los downlink de toma de posesion van a empezar con FF\n                payload.payload_raw +=\n                    vm.hijack\n                    .metodoActivacion;\n                payload.payload_raw +=\n                    vm.hijack.param3\n                    .toUpperCase();\n                payload.payload_raw =\n                    btoa(payload\n                        .payload_raw);\n                servicioHTTP({\n                    method: 'POST',\n                    url: $location\n                        .protocol() +\n                        '://' +\n                        $location\n                        .host() +\n                        '/api/v1/' +\n                        vm\n                        .tokenControl +\n                        '/telemetry',\n                    data: \"{'accion':'tomarPosesion','uuid':'\" +\n                        vm\n                        .entityId\n                        .id +\n                        \"','payload':'\" +\n                        JSON\n                        .stringify(\n                            payload\n                        ) +\n                        \"'}\"\n                }).\n                success(function(data,\n                    status,\n                    headers,\n                    config) {\n                    payload\n                        .payload_raw =\n                        \"FF\"; //Los downlink de toma de posesion van a empezar con FF\n                    payload\n                        .payload_raw +=\n                        vm\n                        .hijack\n                        .metodoActivacion;\n                    payload\n                        .payload_raw +=\n                        vm\n                        .hijack\n                        .param2;\n                    console.log(\n                        'worked'\n                    );\n                    updateAliasData\n                        ();\n                    $scope.form\n                        .hijackForm\n                        .$setPristine();\n                    $mdDialog\n                        .hide();\n                    // ...\n                }).\n                error(function(data,\n                    status,\n                    headers,\n                    config) {\n                    console.log(\n                        'notworked'\n                    );\n                    // ...\n                });\n            }).\n            error(function(data, status,\n                headers,\n                config) {\n                console.log(\n                    'notworked');\n                // ...\n            });\n        }).\n        error(function(data, status, headers,\n            config) {\n            console.log('notworked');\n            // ...\n        });\n    };\n\n    vm.save = function() {\n        servicioHTTP({\n            method: 'POST',\n            url: $location.protocol() + '://' +\n                $location.host() + ':' +\n                $location.port() +\n                '/api/v1/' + vm.tokenControl +\n                '/telemetry',\n            data: \"{'accion':'editarEntidad','idEntidad':'\" +\n                vm.entityId.id +\n                \"','nombreEntidad':'_\" + vm\n                .attributes.nombreEntidad +\n                \"','subtipoEntidad':'\" + vm\n                .attributes.tipoEntidad +\n                \"','tipoEntidad':'\" + vm\n                .entityType +\n                \"','padreEntidad':'\" + vm\n                .padre +\n                \"','tipoPadreEntidad':'\" + vm\n                .activos[vm.padre].tipo + \"'}\"\n        }).\n        success(function(data, status, headers,\n            config) {\n            console.log('worked');\n            setTimeout(updateAliasData,\n                2000);\n            //updateAliasData();\n            $scope.form.editEntityForm\n                .$setPristine();\n            $mdDialog.hide();\n            // ...\n        }).\n        error(function(data, status, headers,\n            config) {\n            console.log('notworked');\n            // ...\n        });\n\n\n        //saveAttributes();\n        //saveRelations();\n        //$scope.editEntityForm.$setPristine();\n    };\n\n    vm.configurar = function() {\n        //Si hay atributos de alarma tengo que stringficarlos\n\n        vm.configuracion.__alarmas = JSON.stringify(vm\n            .configuracion.__alarmas);\n        vm.configuracion = JSON.stringify(vm\n            .configuracion);\n        //console.log(vm.attributes);\n        servicioHTTP({\n            method: 'POST',\n            url: $location.protocol() + '://' +\n                $location.host() + ':' +\n                $location.port() +\n                '/api/v1/' + vm.tokenControl +\n                '/telemetry',\n            data: \"{'accion':'configurarEntidad','idEntidad':'\" +\n                vm.entityId.id +\n                \"','configuracion':\" + vm\n                .configuracion + \"}\"\n        }).\n        success(function(data, status, headers,\n            config) {\n            console.log('worked');\n            updateAliasData();\n            $scope.form.editEntityForm\n                .$setPristine();\n            $mdDialog.hide();\n            // ...\n        }).\n        error(function(data, status, headers,\n            config) {\n            console.log('notworked');\n            // ...\n        });\n\n\n        //saveAttributes();\n        //saveRelations();\n        //$scope.editEntityForm.$setPristine();\n    };\n\n    vm.cancel = function() {\n        $mdDialog.hide();\n    };\n\n    function getEntityAttributes(attributes) {\n        //console.log(attributes);\n        //El nombre de todos los atributos de configuración va a comenzar con __\n        for (var i = 0; i < attributes.length; i++) {\n            if (attributes[i].key.substr(0, 2) == \"__\") {\n                if (attributes[i].key == \"__alarma_\" + vm\n                    .subtipo) {\n                    var alarmas = JSON.parse(attributes[i]\n                        .value);\n                    for (var clave in alarmas) {\n                        vm.configuracion.__alarmas[clave] =\n                            alarmas[clave];\n                        if (!alarmas[clave].hasOwnProperty(\n                                'emailsAdicionales')) {\n                            vm.configuracion.__alarmas[\n                                    clave]\n                                .emailsAdicionales = [];\n                        }\n                    }\n                } else {\n                    vm.configuracion[attributes[i].key] =\n                        attributes[i]\n                        .value;\n                }\n            } else if (attributes[i].key ==\n                \"nombreEntidad\") {\n                //Hago esto para quitar el guión bajo y evitar que se puedan perder leading zeros\n                vm.attributes[attributes[i].key] =\n                    attributes[i].value.substr(1);\n            } else {\n                vm.attributes[attributes[i].key] =\n                    attributes[i].value;\n            }\n        }\n\n        vm.serverAttributes = angular.copy(vm.attributes);\n    }\n\n    function getTiposDeActivosYDispositivos(attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            if (attributes[i].key ==\n                \"tiposDeDispositivos\") {\n                vm.tiposDeDispositivos = attributes[i].value\n                    .split(\",\");\n            } else if (attributes[i].key ==\n                \"tiposDeActivos\") {\n                vm.tiposDeActivos = attributes[i].value\n                    .split(\",\");\n            } else if (attributes[i].key ==\n                \"email\") {\n                if (attributes[i].value !== \"\") {\n                    vm.viasNotificacion.email = true;\n                } else {\n                    vm.viasNotificacion.email = false;\n                }\n            } else if (attributes[i].key ==\n                \"token_telegram\") {\n                if (attributes[i].value !== \"\") {\n                    vm.viasNotificacion.telegram = true;\n                } else {\n                    vm.viasNotificacion.telegram = false;\n                }\n\n            } else if (attributes[i].key ==\n                \"token_webhook_ifttt\") {\n                if (attributes[i].value !== \"\") {\n                    vm.viasNotificacion.ifttt = true;\n                } else {\n                    vm.viasNotificacion.ifttt = false;\n                }\n            }\n        }\n\n    }\n\n\n    function getActivos(activos) {\n        //Los uso para establecer los padres\n        //Aquí habrá que generalizar para usar los atributos nombre y tipo, en lugar de los fields?\n        for (var i = 0; i < activos.length; i++) {\n            //Si es un activo no debe incluirse a sí mismo\n            if (vm.entityType == \"DEVICE\" || vm.entityId\n                .id !=\n                activos[i].id.id) {\n                getAtributosActivo(activos[i].id.id,\n                    activos[i].name, activos[i].type);\n\n            } else {\n                //console.log(\"b_\" + vm.entityId.id + \"__\" +activos[i].id.id);\n            }\n        }\n        //console.log(vm.activos);\n    }\n\n    function getAtributosActivo(id, nombreActivo,\n        tipoActivo) {\n        attributeService.getEntityAttributesValues('ASSET',\n            id, 'SERVER_SCOPE').then(\n            function success(data) {\n                var parametros = {};\n                for (var i = 0; i < data.length; i++) {\n                    //console.log(data[i].key,data[i].value);\n                    if (data[i].key ==\n                        \"nombreEntidad\") {\n                        parametros['nombreEntidad'] =\n                            data[i]\n                            .value.substr(1);\n                    } else {\n                        parametros[data[i].key] = data[\n                                i]\n                            .value;\n                    }\n                }\n                vm.activos[nombreActivo] = {\n                    'tipo': tipoActivo,\n                    'atributos': parametros\n                };\n                //console.log(vm.activos[nombreActivo]);\n\n            });\n    }\n\n\n    function getEntityRelations(relations) {\n        var relationsFrom = relations[0];\n        var relationsTo = relations[1];\n        //Si tiene hijos no se puede borrar\n        vm.borrable = true;\n        for (var i = 0; i < relationsFrom.length; i++) {\n            vm.borrable = false;\n            var relation = {\n                direction: types\n                    .entitySearchDirection.from,\n                relationType: relationsFrom[i].type,\n                relatedEntity: relationsFrom[i].to\n            };\n            vm.relations.push(relation);\n        }\n\n        for (var i = 0; i < relationsTo.length; i++) {\n\n            var relation = {\n                direction: types\n                    .entitySearchDirection.to,\n                relationType: relationsTo[i].type,\n                relatedEntity: relationsTo[i].from\n            };\n            if (relation.relationType == \"Contains\" &&\n                relation.relatedEntity.entityType == \"ASSET\"\n            ) {\n                establecerNombrePadre(relation.relatedEntity\n                    .id);\n                //Necesito el nombre del padre\n            }\n            vm.relations.push(relation);\n        }\n\n    }\n\n    function establecerNombrePadre(id) {\n        assetService.getAsset(id).then(\n            function(data) {\n                vm.padre = data.name;\n                //console.log(vm.padre);\n            }\n        );\n    }\n\n    function getEntityInfo() {\n        entityService.getEntity(entityId.entityType,\n            entityId.id).then(\n            function(entity) {\n                vm.entity = entity;\n                vm.type = vm.entity.type;\n            });\n\n        attributeService.getEntityAttributesValues(\n            entityId.entityType, entityId.id,\n            'SERVER_SCOPE').then(\n            function(data) {\n                if (data.length) {\n                    getEntityAttributes(data);\n                }\n            });\n        //Obtngo los tipos de activos y dispositivos \n        //que tiene permitidos el customer en sus atributos\n        //y también las vías de notificación (ifttt, telegram...)\n        attributeService.getEntityAttributesValues(\n            'CUSTOMER', userService.getCurrentUser()\n            .customerId,\n            'SERVER_SCOPE').then(\n            function(data) {\n                if (data.length) {\n                    getTiposDeActivosYDispositivos(\n                        data);\n                }\n            });\n        //Obtengo los activos del customer para poder\n        //mostrarlos como potenciales padres\n        assetService.getCustomerAssets(userService\n            .getCurrentUser()\n            .customerId, {\n                \"limit\": 100\n            }).then(\n            function(data) {\n                if (data.data.length) {\n                    getActivos(data.data);\n\n                }\n            });\n\n        //Obtengo el token del dispositivo SYSTEM\n        deviceService.getCustomerDevices(userService\n            .getCurrentUser().customerId, {\n                \"limit\": 100\n            }, false, {}, 'SYSTEM').then(\n            function(data) {\n                if (data.data.length == 1) {\n                    deviceService.getDeviceCredentials(\n                        data.data[0].id.id, true, {}\n                    ).then(\n                        function(response) {\n                            vm.tokenControl =\n                                response\n                                .credentialsId;\n\n                        });\n                }\n            });\n\n\n        $q.all([entityRelationService.findInfoByFrom(\n                entityId.id, entityId.entityType\n            ), entityRelationService\n            .findInfoByTo(entityId.id, entityId\n                .entityType)\n        ]).then(\n            function(relations) {\n                getEntityRelations(relations);\n            });\n\n    }\n\n    function saveAttributes() {\n        var attributesArray = [];\n        for (var key in vm.attributes) {\n            if (vm.attributes[key] !== vm\n                .serverAttributes[key]) {\n                attributesArray.push({\n                    key: key,\n                    value: vm.attributes[key]\n                });\n            }\n        }\n        if (attributesArray.length > 0) {\n            attributeService.saveEntityAttributes(\n                entityId.entityType, entityId.id,\n                \"SERVER_SCOPE\", attributesArray);\n        }\n    }\n\n    function saveRelations() {\n        var tasks = [];\n        for (var i = 0; i < vm.newRelations\n            .length; i++) {\n            var relation = {\n                type: vm.newRelations[i]\n                    .relationType\n            };\n            if (vm.newRelations[i].direction == types\n                .entitySearchDirection.from) {\n                relation.to = vm.newRelations[i]\n                    .relatedEntity;\n                relation.from = entityId;\n            } else {\n                relation.to = entityId;\n                relation.from = vm.newRelations[i]\n                    .relatedEntity;\n            }\n            tasks.push(entityRelationService\n                .saveRelation(relation));\n        }\n        for (var i = 0; i < vm.relationsToDelete\n            .length; i++) {\n            var relation = {\n                type: vm.relationsToDelete[i]\n                    .relationType\n            };\n            if (vm.relationsToDelete[i].direction ==\n                types.entitySearchDirection.from) {\n                relation.to = vm.relationsToDelete[i]\n                    .relatedEntity;\n                relation.from = entityId;\n            } else {\n                relation.to = entityId;\n                relation.from = vm.relationsToDelete[i]\n                    .relatedEntity;\n            }\n            tasks.push(entityRelationService\n                .deleteRelation(relation.from.id,\n                    relation.from.entityType,\n                    relation.type, relation.to.id,\n                    relation.to.entityType));\n        }\n        $q.all(tasks).then(function() {\n            vm.relations = vm.relations.concat(\n                vm.newRelations);\n            vm.newRelations = [];\n            vm.relationsToDelete = [];\n            updateAliasData();\n        });\n    }\n\n    function updateAliasData() {\n        var aliasIds = [];\n        for (var id in widgetContext.aliasController\n                .resolvedAliases) {\n            aliasIds.push(id);\n        }\n        var tasks = [];\n        aliasIds.forEach(function(aliasId) {\n            widgetContext.aliasController\n                .setAliasUnresolved(aliasId);\n            tasks.push(widgetContext\n                .aliasController\n                .getAliasInfo(aliasId));\n        });\n        $q.all(tasks).then(function() {\n            $rootScope.$broadcast(\n                'entityAliasesChanged',\n                aliasIds);\n        });\n    }\n\n}"
              }
            ]
          },
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "displayTimewindow": true
        },
        "id": "fba8b82f-4b63-d360-68e1-9481f57706b1"
      },
      "f1a629d9-faa9-ae03-8c9e-91e0037b17bc": {
        "isSystemType": true,
        "bundleAlias": "iotopentech",
        "typeAlias": "perfil2",
        "type": "static",
        "title": "New widget",
        "sizeX": 7,
        "sizeY": 14,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "8px",
          "settings": {
            "showResultMessage": true,
            "widgetTitle": "PERFUL DE"
          },
          "title": "PERFIL DE USUARIO",
          "dropShadow": true,
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableFullscreen": true,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {}
        },
        "id": "f1a629d9-faa9-ae03-8c9e-91e0037b17bc"
      },
      "58b27f5a-e29a-7c88-111f-586d8b32a086": {
        "isSystemType": true,
        "bundleAlias": "iotopentech",
        "typeAlias": "device_claiming_widget",
        "type": "static",
        "title": "New widget",
        "sizeX": 7,
        "sizeY": 6,
        "config": {
          "datasources": [],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": true,
          "backgroundColor": "rgb(255, 255, 255)",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "8px",
          "settings": {
            "deviceSecret": true,
            "showLabel": true
          },
          "title": "RECLAMAR DISPOSITIVO",
          "dropShadow": true,
          "showTitleIcon": false,
          "titleIcon": null,
          "iconColor": "rgba(0, 0, 0, 0.87)",
          "iconSize": "24px",
          "titleTooltip": "",
          "enableFullscreen": false,
          "enableDataExport": true,
          "widgetStyle": {},
          "titleStyle": {
            "fontSize": "16px",
            "fontWeight": 400
          },
          "useDashboardTimewindow": true,
          "displayTimewindow": true,
          "showLegend": false,
          "actions": {}
        },
        "id": "58b27f5a-e29a-7c88-111f-586d8b32a086"
      }
    },
    "states": {
      "default": {
        "name": "Configuración",
        "root": true,
        "layouts": {
          "main": {
            "widgets": {
              "fba8b82f-4b63-d360-68e1-9481f57706b1": {
                "sizeX": 9,
                "sizeY": 11,
                "row": 0,
                "col": 7
              },
              "f1a629d9-faa9-ae03-8c9e-91e0037b17bc": {
                "sizeX": 7,
                "sizeY": 14,
                "row": 0,
                "col": 0
              },
              "58b27f5a-e29a-7c88-111f-586d8b32a086": {
                "sizeX": 7,
                "sizeY": 6,
                "row": 0,
                "col": 16
              }
            },
            "gridSettings": {
              "backgroundColor": "#eeeeee",
              "color": "rgba(0,0,0,0.870588)",
              "columns": 24,
              "margins": [
                10,
                10
              ],
              "backgroundSizeMode": "100%"
            }
          }
        }
      }
    },
    "entityAliases": {
      "bc41b835-4a1d-49fc-de3b-142ec2484fd4": {
        "id": "bc41b835-4a1d-49fc-de3b-142ec2484fd4",
        "alias": "ActivoROOT",
        "filter": {
          "type": "assetType",
          "resolveMultiple": true,
          "assetType": "ROOT",
          "assetNameFilter": ""
        }
      }
    },
    "timewindow": {
      "displayValue": "",
      "selectedTab": 0,
      "hideInterval": false,
      "hideAggregation": false,
      "hideAggInterval": false,
      "realtime": {
        "interval": 1000,
        "timewindowMs": 60000
      },
      "history": {
        "historyType": 0,
        "interval": 1000,
        "timewindowMs": 60000,
        "fixedTimewindow": {
          "startTimeMs": 1584265253803,
          "endTimeMs": 1584351653803
        }
      },
      "aggregation": {
        "type": "AVG",
        "limit": 25000
      }
    },
    "settings": {
      "stateControllerId": "entity",
      "showTitle": false,
      "showDashboardsSelect": true,
      "showEntitiesSelect": true,
      "showDashboardTimewindow": true,
      "showDashboardExport": true,
      "toolbarAlwaysOpen": true
    }
  },
  "name": "Configuración"
}